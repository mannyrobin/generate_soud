{"version":3,"sources":["./node_modules/@angular/cdk/esm5/bidi.es5.js","./node_modules/@angular/cdk/esm5/coercion.es5.js","./node_modules/@angular/cdk/esm5/collections.es5.js","./node_modules/@angular/cdk/esm5/drag-drop.es5.js","./node_modules/@angular/cdk/esm5/platform.es5.js","./node_modules/@angular/cdk/esm5/scrolling.es5.js","./src/app/player/components/playlist/playlist.component.html","./src/app/player/player.page.html","./src/app/shared/components/language-modal/language-modal.component.html","./node_modules/uuid/index.js","./node_modules/uuid/lib/bytesToUuid.js","./node_modules/uuid/lib/rng-browser.js","./node_modules/uuid/v1.js","./node_modules/uuid/v4.js","./src/app/player/components/playlist/playlist.component.scss","./src/app/player/components/playlist/playlist.component.ts","./src/app/player/model/playlist.model.ts","./src/app/player/model/sound.model.ts","./src/app/player/pipes/category.pipe.ts","./src/app/player/pipes/order-by.pipe.ts","./src/app/player/pipes/time-format.pipe.ts","./src/app/player/player.module.ts","./src/app/player/player.page.scss","./src/app/player/player.page.ts","./src/app/player/services/play-sound.service.ts","./src/app/player/services/player.api.service.ts","./src/app/shared/components/language-modal/language-modal.component.scss","./src/app/shared/components/language-modal/language-modal.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AAC0H;;AAErK;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,WAAW,4DAAM,CAAC,wDAAQ;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yBAAyB;AACnG,MAAM;AACN,wDAAwD,wEAAkB,EAAE,6CAA6C,2BAA2B,8DAAQ,mBAAmB,EAAE,6CAA6C;AAC9N;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iCAAiC,4CAA4C;AAC7E,2BAA2B,0BAA0B;AACrD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kBAAkB,OAAO,oDAAM,wBAAwB;AACvD,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEqF;AACrF;;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;;AAE3C;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mCAAmC,wDAAU;AAC7C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEwH;AACxH;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACa;AACgB;;AAE/D;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,+CAAU,gBAAgB,+CAAE;AACjE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,mCAAmC,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,mCAAmC,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qCAAqC,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,qCAAqC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA,mEAAmE,wEAAkB,EAAE,wDAAwD,wCAAwC,EAAE,wDAAwD;AACjP;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEyI;AACzI;;;;;;;;;;;;;AC/hBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4F;AACoB;AACb;AAClB;AACkN;AACxP;AACY;AACJ;;AAEnD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,+CAA+C,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,6FAA+B,EAAE,gBAAgB;AACnF;AACA;AACA,UAAU;AACV;AACA,iCAAiC,6FAA+B,EAAE,iBAAiB;AACnF;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA,wCAAwC,iDAAY;AACpD;AACA;AACA;AACA,sCAAsC,iDAAY;AAClD;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA,yBAAyB,4CAAO;AAChC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,yFAAyF,EAAE;AAC3F,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,qCAAqC,wCAAwC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,QAAQ,2EAAa,SAAS,EAAE;AAC3D,oBAAoB,EAAE;AACtB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,oDAAoD,EAAE;AACjF,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,2EAAa;AACnC,oCAAoC,EAAE;AACtC,4BAA4B,EAAE;AAC9B,4BAA4B,EAAE,oDAAoD,EAAE;AACpF;AACA,8DAA8D,EAAE;AAChE,+DAA+D,EAAE;AACjE,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,EAAE,iDAAiD,2EAAa;AACpF,oBAAoB,EAAE;AACtB;AACA,wBAAwB,EAAE,8CAA8C,EAAE;AAC1E;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oBAAoB,EAAE,8CAA8C,EAAE;AAC/F;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE,gCAAgC;AACtD,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,yBAAyB,EAAE;AAC3B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,sEAAsE,EAAE;AACxE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,sEAAsE,gEAAS;AAC/E,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,mBAAmB,EAAE;AACrB;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,8BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,mCAAmC,qCAAqC,EAAE,6BAA6B;AACvG,4BAA4B,EAAE;AAC9B;AACA,mDAAmD,EAAE;AACrD;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C,8CAA8C,EAAE;AAChD,iBAAiB;AACjB,aAAa;AACb;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,sCAAsC,EAAE,mFAAmF,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,qDAAqD,EAAE;AACvD;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+CAA+C,EAAE,2FAA2F,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,4BAA4B,EAAE;AAC9B,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,+BAA+B;AACtD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,aAAa,EAAE;AACpC;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,2EAAa;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,mBAAmB,EAAE;AACrB,wCAAwC,2EAAa;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,2EAAa;AACnC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,uCAAuC,EAAE;AACrE;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,gEAAgE,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qEAAqE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,aAAa,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,4CAA4C,EAAE,cAAc,EAAE;AACvF,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,kCAAkC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,kCAAkC,EAAE;AACpE,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,2EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,2EAAa;AACnC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,mDAAmD,EAAE;AAC9E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,sCAAsC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,2EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,wCAAwC,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,2EAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,EAAE;AACrD;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,QAAQ,gFAAkB;AAC1B,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,6FAA+B;AACjE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,2CAA2C,EAAE,UAAU,EAAE;AACvF;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,yCAAyC,EAAE,UAAU,EAAE;AACrF;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,6BAA6B,EAAE;AAC7D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,2BAA2B,EAAE;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,uCAAuC,EAAE;AACtE;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,4CAA4C,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3E,MAAM;AACN,0DAA0D,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AACjP;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,2CAA2C;AAC3C,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,oEAAa,EAAE;AAC/B,SAAS;AACT,MAAM;AACN,kDAAkD,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACtQ;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,wBAAwB,4DAAc;AACtC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG,OAAO,sDAAQ,EAAE;AACtG,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,oCAAoC;AACpE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,yDAAW;AAC3B,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,yDAAW;AAC3B,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,yDAAyD,0DAAG;AAC5D,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,EAAE;AACjB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iGAAiG,EAAE;AACnG,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wCAAwC,gEAAS;AACjD;AACA,YAAY,0DAAG;AACf,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,mCAAmC,qCAAqC,EAAE;AAC1E;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,mCAAmC,uBAAuB,EAAE;AAC5D;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,0CAAK;AAC5B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iCAAiC,2BAA2B,EAAE;AAC9D,aAAa,IAAI,gEAAS;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB,2EAAa;AACnC,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,iCAAiC,gBAAgB;AACjD,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,0CAA0C;AACxE;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,iDAAiD;AAClF,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,gCAAgC,OAAO,oDAAM,0BAA0B,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC3H,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,gCAAgC,OAAO,oDAAM,4BAA4B,GAAG;AACrF,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,iBAAiB;AAC1B,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,oBAAoB,OAAO,6DAAe,yBAAyB,oBAAoB,IAAI;AAC3F,4BAA4B,OAAO,0DAAY,0BAA0B,gBAAgB,IAAI;AAC7F,gCAAgC,OAAO,0DAAY,8BAA8B,gBAAgB,IAAI;AACrG,gBAAgB,OAAO,mDAAK,0BAA0B;AACtD,oBAAoB,OAAO,mDAAK,8BAA8B;AAC9D,+BAA+B,OAAO,mDAAK,iCAAiC;AAC5E,2BAA2B,OAAO,mDAAK,8BAA8B;AACrE,0BAA0B,OAAO,mDAAK,gCAAgC;AACtE,4BAA4B,OAAO,mDAAK,sCAAsC;AAC9E,oBAAoB,OAAO,mDAAK,8BAA8B;AAC9D,6BAA6B,OAAO,mDAAK,uCAAuC;AAChF,mBAAmB,OAAO,oDAAM,6BAA6B;AAC7D,oBAAoB,OAAO,oDAAM,8BAA8B;AAC/D,iBAAiB,OAAO,oDAAM,2BAA2B;AACzD,mBAAmB,OAAO,oDAAM,6BAA6B;AAC7D,kBAAkB,OAAO,oDAAM,4BAA4B;AAC3D,mBAAmB,OAAO,oDAAM,6BAA6B;AAC7D,iBAAiB,OAAO,oDAAM,2BAA2B;AACzD;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oBAAoB,OAAO,mDAAK,uCAAuC;AACvE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,aAAa,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8BAA8B,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oCAAoC,mFAAqB;AACzD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,oBAAoB,gEAAS;AACxD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,sBAAsB,EAAE;AACrD,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,yEAAyE,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,iCAAiC,EAAE;AACjE;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,yEAAW;AACtC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,yBAAyB,EAAE;AAChE,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,+BAA+B,EAAE;AAC9D,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,0BAA0B,EAAE;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,yBAAyB,0CAA0C;AACnE,yBAAyB,6DAA6D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,iBAAiB;AAC1B,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,uCAAuC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE;AACrF,MAAM;AACN;AACA,uBAAuB,OAAO,6DAAe,SAAS,gEAAU;AAChE,gCAAgC;AAChC;AACA,iCAAiC,gBAAgB,EAAE;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB,uBAAuB,OAAO,mDAAK,qCAAqC;AACxE,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,uBAAuB,OAAO,mDAAK,qCAAqC;AACxE,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,mDAAK,kCAAkC;AAClE,oBAAoB,OAAO,mDAAK,kCAAkC;AAClE,2BAA2B,OAAO,mDAAK,yCAAyC;AAChF,0BAA0B,OAAO,mDAAK,wCAAwC;AAC9E,8BAA8B,OAAO,mDAAK,4CAA4C;AACtF,mBAAmB,OAAO,oDAAM,iCAAiC;AACjE,mBAAmB,OAAO,oDAAM,iCAAiC;AACjE,kBAAkB,OAAO,oDAAM,gCAAgC;AAC/D,kBAAkB,OAAO,oDAAM,gCAAgC;AAC/D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEmU;AACnU;;;;;;;;;;;;;ACz3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkH;AAC9D;;AAEpD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,2CAA2C;AAC3C,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,yDAAW,IAAI;AAC/F,MAAM;AACN,kDAAkD,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,yDAAW,MAAM,EAAE,uCAAuC;AACrM;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ,WAAW,IAAI;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,wDAAwD,EAAE,qCAAqC;AAC/F;AACA,4BAA4B;AAC5B;AACA,6BAA6B,qCAAqC,EAAE;AACpE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA,WAAW,EAAE;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEiN;AACjN;;;;;;;;;;;;;AC5VA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8T;AACjQ;AAC4C;AACwB;AACC;AACnE;AAC7B;AACuC;;AAEzE;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA,kCAAkC,4DAAc;;AAEhD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA,kEAAkE,2EAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wBAAwB;AACxB,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,kBAAkB,kFAAoB,QAAQ,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qBAAqB,kFAAoB,QAAQ,EAAE;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qBAAqB,kFAAoB,QAAQ,EAAE;AAC7E;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,mCAAmC,gEAAU;AAC7C,4CAA4C;AAC5C;AACA,6CAA6C,kCAAkC,EAAE;AACjF,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,yCAAyC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E;AACA,mBAAmB,+CAAE;AACrB;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,qCAAqC,gEAAS;AAC9C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,oCAAoC,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,8BAA8B,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,sDAAS;AAC5B,wBAAwB;AACxB;AACA,yBAAyB,+BAA+B,EAAE;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,8DAAQ;AACxB,MAAM;AACN,0DAA0D,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,8DAAQ,GAAG,EAAE,+CAA+C;AACjP;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,uBAAuB,oDAAM,EAAE,8DAAQ;AAC/E;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC,oCAAoC,+CAAU;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB,sDAAS,gDAAgD,gEAAS;AACzF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA,gBAAgB,kFAAoB,MAAM,uEAAiB;AAC3D;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,oFAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kFAAoB,MAAM,uEAAiB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kFAAoB,MAAM,uEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC/D,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sEAAsE,4DAAuB,GAAG,kDAAa;AAC7G;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA,0CAA0C,4CAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+CAAU;AAClD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,6BAA6B,6BAA6B,EAAE,GAAG,EAAE;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAS,aAAa,EAAE;AACpC;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA,wBAAwB;AACxB;AACA,yBAAyB,kDAAkD,EAAE;AAC7E;AACA,SAAS,GAAG,EAAE;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,yCAAyC,gEAAS;AAClD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,kDAAkD,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,mBAAmB;AACrD,mBAAmB,EAAE;AACrB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa,GAAG,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,gDAAgD,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6EAA6E,uCAAuC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC;AACA,0DAA0D,cAAc,kBAAkB,cAAc,eAAe,wBAAwB,4BAA4B,iCAAiC,oCAAoC,kBAAkB,MAAM,OAAO,gBAAgB,8CAA8C,QAAQ,UAAU,+EAA+E,gBAAgB,+ZAA+Z,eAAe,gBAAgB,cAAc,eAAe,oBAAoB,qBAAqB,UAAU,6EAA6E,eAAe,uZAAuZ,cAAc,iBAAiB,aAAa,gBAAgB,mBAAmB,sBAAsB,UAAU,2BAA2B,kBAAkB,MAAM,OAAO,WAAW,UAAU,qBAAqB,qCAAqC,QAAQ,UAAU,wBAAwB;AACjuD;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,oCAAoC,GAAG;AACjH,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS;AACT,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,+BAA+B,OAAO,oDAAM,EAAE;AAC9C,2BAA2B,OAAO,uDAAS,4BAA4B,eAAe,IAAI;AAC1F;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAS,aAAa,EAAE;AAChC;AACA,QAAQ,+DAAQ;AAChB;AACA;AACA;AACA,QAAQ,gEAAS;AACjB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,kEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,gDAAgD,gEAAS;AACzD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oDAAoD,EAAE;AAC/E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qBAAqB,6EAAY;AACjC;AACA,oBAAoB,wEAAe,kBAAkB,+CAAU;AAC/D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,wCAAwC,kFAAkF,EAAE;AAC5H;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC,uBAAuB,EAAE;AACzB;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,+CAA+C;AAC/C;AACA,2BAA2B,EAAE;AAC7B,mEAAmE,EAAE;AACrE;AACA;AACA,4CAA4C;AAC5C,+DAA+D,EAAE;AACjE;AACA,kBAAkB;AAClB;AACA,2BAA2B,EAAE;AAC7B,uCAAuC,EAAE,6CAA6C,EAAE;AACxF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE,6CAA6C,EAAE;AACpF;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,yDAAW,EAAE;AAC7B,SAAS,OAAO,6DAAe,EAAE;AACjC,SAAS,+CAA+C,OAAO,sDAAQ,EAAE,GAAG;AAC5E,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,2BAA2B,OAAO,mDAAK,EAAE;AACzC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,0CAA0C,OAAO,mDAAK,EAAE;AACxD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAU,EAAE,oEAAc;AACxD;AACA,wBAAwB,4DAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB,kDAAK,CAAC,sDAAS,oBAAoB,sDAAS;AAC5D,gBAAgB,+CAAE;AAClB;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oCAAoC,EAAE;AAC/D,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sBAAsB;AACtB;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,oCAAoC;AAC1E,oDAAoD,gEAAS;AAC7D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa;AACb;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,8DAAQ,EAAE;AAC1B,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN,uDAAuD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,8DAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,EAAE,4CAA4C;AACrO;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,oBAAoB,8DAAQ,EAAE,oDAAM;AAC5E;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE4a;AAC5a;;;;;;;;;;;;;ACx2EA;AAAe,spBAAulB,wBAAwB,0NAA0N,sBAAsB,yLAAyL,0BAA0B,mJAAmJ,wBAAwB,okBAAokB,aAAa,8WAA8W,SAAS,0KAA0K,uBAAuB,qGAAqG,2MAA2M,gCAAgC,wQAAwQ,yBAAyB,uRAAuR,wBAAwB,qKAAqK,uBAAuB,+MAA+M,yBAAyB,oBAAoB,sBAAsB,qyCAAqyC,gPAAgP,SAAS,IAAI,cAAc,gLAAgL,gBAAgB,upBAAupB,80BAA80B,8BAA8B,IAAI,cAAc,gJAAgJ,kBAAkB,yQ;;;;;;;;;;;;ACA1oO;AAAe,8nBAA+jB,gBAAgB,i9DAAi9D,SAAS,qcAAqc,kCAAkC,8NAA8N,sjBAAsjB,SAAS,ooBAAooB,wBAAwB,8RAA8R,sBAAsB,yOAAyO,0BAA0B,6NAA6N,wBAAwB,0oBAA0oB,SAAS,iIAAiI,YAAY,gvBAAgvB,SAAS,yIAAyI,YAAY,gTAAgT,SAAS,qnBAAqnB,wBAAwB,sRAAsR,sBAAsB,qPAAqP,wBAAwB,qNAAqN,wBAAwB,gPAAgP,SAAS,0eAA0e,eAAe,kSAAkS,SAAS,4VAA4V,eAAe,+aAA+a,SAAS,kMAAkM,uBAAuB,2QAA2Q,wBAAwB,yOAAyO,yBAAyB,0BAA0B,sBAAsB,ocAAoc,w8BAAw8B,SAAS,IAAI,cAAc,4IAA4I,kBAAkB,uiBAAuiB,SAAS,gNAAgN,wBAAwB,yEAAyE,yBAAyB,gaAAga,yBAAyB,wEAAwE,SAAS,weAAwe,4GAA4G,SAAS,IAAI,cAAc,2BAA2B,kBAAkB,4KAA4K,2BAA2B,0FAA0F,wBAAwB,+IAA+I,yBAAyB,0FAA0F,wBAAwB,qHAAqH,OAAO,6CAA6C,4DAA4D,+C;;;;;;;;;;;;ACAzqf;AAAe,wHAAyD,yBAAyB,mOAAmO,kBAAkB,uC;;;;;;;;;;;ACAtV,SAAS,mBAAO,CAAC,uCAAM;AACvB,SAAS,mBAAO,CAAC,uCAAM;;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5GA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC5BA;AAAe,qFAAsB,eAAe,GAAG,sBAAsB,eAAe,oBAAoB,GAAG,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","file":"player-player-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /** @class */ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            var bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            var htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            var value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Directionality.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Directionality.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Directionality.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n    return Directionality;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /** @class */ (function () {\n    function Dir() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._dir; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var old = this._dir;\n            /** @type {?} */\n            var normalizedValue = value ? value.toLowerCase() : value;\n            this._rawDir = value;\n            this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    Dir.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Dir.decorators = [\n        { type: Directive, args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                },] },\n    ];\n    Dir.propDecorators = {\n        change: [{ type: Output, args: ['dirChange',] }],\n        dir: [{ type: Input }]\n    };\n    return Dir;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar BidiModule = /** @class */ (function () {\n    function BidiModule() {\n    }\n    BidiModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                },] },\n    ];\n    return BidiModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : value + \"px\";\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n//# sourceMappingURL=coercion.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nvar  /**\n * @abstract\n * @template T\n */\nDataSource = /** @class */ (function () {\n    function DataSource() {\n    }\n    return DataSource;\n}());\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nvar  /**\n * DataSource wrapper for a native array.\n * @template T\n */\nArrayDataSource = /** @class */ (function (_super) {\n    __extends(ArrayDataSource, _super);\n    function ArrayDataSource(_data) {\n        var _this = _super.call(this) || this;\n        _this._data = _data;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ArrayDataSource.prototype.connect = /**\n     * @return {?}\n     */\n    function () {\n        return this._data instanceof Observable ? this._data : of(this._data);\n    };\n    /**\n     * @return {?}\n     */\n    ArrayDataSource.prototype.disconnect = /**\n     * @return {?}\n     */\n    function () { };\n    return ArrayDataSource;\n}(DataSource));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nvar  /**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nSelectionModel = /** @class */ (function () {\n    function SelectionModel(_multiple, initiallySelectedValues, _emitChanges) {\n        var _this = this;\n        if (_multiple === void 0) { _multiple = false; }\n        if (_emitChanges === void 0) { _emitChanges = true; }\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        /**\n         * Event emitted when the value has changed.\n         * @deprecated Use `changed` instead.\n         * \\@breaking-change 8.0.0 To be changed to `changed`\n         */\n        this.onChange = this.changed;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                function (value) { return _this._markSelected(value); }));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    Object.defineProperty(SelectionModel.prototype, \"selected\", {\n        /** Selected values. */\n        get: /**\n         * Selected values.\n         * @return {?}\n         */\n        function () {\n            if (!this._selected) {\n                this._selected = Array.from(this._selection.values());\n            }\n            return this._selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects a value or an array of values.\n     */\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    SelectionModel.prototype.select = /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return _this._markSelected(value); }));\n        this._emitChangeEvent();\n    };\n    /**\n     * Deselects a value or an array of values.\n     */\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    SelectionModel.prototype.deselect = /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { return _this._unmarkSelected(value); }));\n        this._emitChangeEvent();\n    };\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.toggle = /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    };\n    /**\n     * Clears all of the selected values.\n     */\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype.clear = /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    function () {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    };\n    /**\n     * Determines whether a value is selected.\n     */\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.isSelected = /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return this._selection.has(value);\n    };\n    /**\n     * Determines whether the model does not have a value.\n     */\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.isEmpty = /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    function () {\n        return this._selection.size === 0;\n    };\n    /**\n     * Determines whether the model has a value.\n     */\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.hasValue = /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    function () {\n        return !this.isEmpty();\n    };\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    SelectionModel.prototype.sort = /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    };\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    SelectionModel.prototype.isMultipleSelection = /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    function () {\n        return this._multiple;\n    };\n    /** Emits a change event and clears the records of selected and deselected values. */\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    SelectionModel.prototype._emitChangeEvent = /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    function () {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    };\n    /** Selects a value. */\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._markSelected = /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    };\n    /** Deselects a value. */\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkSelected = /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    };\n    /** Clears out the selected values. */\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkAll = /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { return _this._unmarkSelected(value); }));\n        }\n    };\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    SelectionModel.prototype._verifyValueAssignment = /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    function (values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    };\n    return SelectionModel;\n}());\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nvar UniqueSelectionDispatcher = /** @class */ (function () {\n    function UniqueSelectionDispatcher() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.notify = /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    function (id, name) {\n        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(id, name);\n        }\n    };\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    UniqueSelectionDispatcher.prototype.listen = /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    function (listener) {\n        var _this = this;\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        function () {\n            _this._listeners = _this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            function (registered) {\n                return listener !== registered;\n            }));\n        });\n    };\n    /**\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._listeners = [];\n    };\n    UniqueSelectionDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n    return UniqueSelectionDispatcher;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, ArrayDataSource, isDataSource, DataSource, getMultipleValuesInSingleSelectionError, SelectionModel };\n//# sourceMappingURL=collections.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subscription, Subject, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, take, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable, NgZone, Inject, InjectionToken, NgModule, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, Optional, Directive, ChangeDetectorRef, SkipSelf, ContentChild, ViewContainerRef, isDevMode, TemplateRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    var userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    var multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    var computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    var transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    var property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) { return prop === 'transform' || prop === 'all'; }));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    var propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    var rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    var rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    var value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    function (part) { return part.trim(); }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nvar passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nvar activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nvar MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nvar  /**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nDragRef = /** @class */ (function () {\n    function DragRef(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        var _this = this;\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (_this._handles.length) {\n                /** @type {?} */\n                var targetHandle = _this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) {\n                    /** @type {?} */\n                    var target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !_this._disabledHandles.has(targetHandle) && !_this.disabled) {\n                    _this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!_this.disabled) {\n                _this._initializeDragSequence(_this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (!_this._hasStartedDragging) {\n                /** @type {?} */\n                var pointerPosition = _this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                var distanceX = Math.abs(pointerPosition.x - _this._pickupPositionOnPage.x);\n                /** @type {?} */\n                var distanceY = Math.abs(pointerPosition.y - _this._pickupPositionOnPage.y);\n                /** @type {?} */\n                var isOverThreshold = distanceX + distanceY >= _this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    var isDelayElapsed = Date.now() >= _this._dragStartTime + (_this.dragStartDelay || 0);\n                    if (!isDelayElapsed) {\n                        _this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!_this._dropContainer || !_this._dropContainer.isDragging()) {\n                        _this._hasStartedDragging = true;\n                        _this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        function () { return _this._startDragSequence(event); }));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (_this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!_this._previewRect || (!_this._previewRect.width && !_this._previewRect.height)) {\n                    _this._previewRect = (_this._preview || _this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            var constrainedPointerPosition = _this._getConstrainedPointerPosition(event);\n            _this._hasMoved = true;\n            event.preventDefault();\n            _this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (_this._dropContainer) {\n                _this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                var activeTransform = _this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - _this._pickupPositionOnPage.x + _this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - _this._pickupPositionOnPage.y + _this._passiveTransform.y;\n                _this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && _this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    var appliedTransform = \"translate(\" + activeTransform.x + \" \" + activeTransform.y + \")\";\n                    _this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (_this._moveEvents.observers.length) {\n                _this._ngZone.run((/**\n                 * @return {?}\n                 */\n                function () {\n                    _this._moveEvents.next({\n                        source: _this,\n                        pointerPosition: constrainedPointerPosition,\n                        event: event,\n                        distance: _this._getDragDistance(constrainedPointerPosition),\n                        delta: _this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    Object.defineProperty(DragRef.prototype, \"disabled\", {\n        /** Whether starting to drag this element is disabled. */\n        get: /**\n         * Whether starting to drag this element is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newValue = coerceBooleanProperty(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this._toggleNativeDragInteractions();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    DragRef.prototype.getPlaceholderElement = /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._placeholder;\n    };\n    /** Returns the root draggable element. */\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    DragRef.prototype.getRootElement = /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    function () {\n        return this._rootElement;\n    };\n    /** Registers the handles that can be used to drag the element. */\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    DragRef.prototype.withHandles = /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    function (handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        function (handle) { return coerceElement(handle); }));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        function (handle) { return toggleNativeDragInteractions(handle, false); }));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    DragRef.prototype.withPreviewTemplate = /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    function (template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    DragRef.prototype.withPlaceholderTemplate = /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    function (template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    DragRef.prototype.withRootElement = /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    function (rootElement) {\n        /** @type {?} */\n        var element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    DragRef.prototype.withBoundaryElement = /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    function (boundaryElement) {\n        var _this = this;\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { return (/** @type {?} */ (_this))._containInsideBoundaryOnResize(); }));\n        }\n        return (/** @type {?} */ (this));\n    };\n    /** Removes the dragging functionality from the DOM element. */\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    DragRef.prototype.dispose = /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    function () {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeElement(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._nextSibling = (/** @type {?} */ (null));\n    };\n    /** Checks whether the element is currently being dragged. */\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    DragRef.prototype.isDragging = /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    };\n    /** Resets a standalone drag item to its initial position. */\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    DragRef.prototype.reset = /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    function () {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    };\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    DragRef.prototype.disableHandle = /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    function (handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    };\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    DragRef.prototype.enableHandle = /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    function (handle) {\n        this._disabledHandles.delete(handle);\n    };\n    /** Sets the layout direction of the draggable item. */\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    DragRef.prototype.withDirection = /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    function (direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    };\n    /** Sets the container that the item is part of. */\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    DragRef.prototype._withDropContainer = /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    function (container) {\n        this._dropContainer = container;\n    };\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    DragRef.prototype.getFreeDragPosition = /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    };\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    DragRef.prototype.setFreeDragPosition = /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    function (value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    };\n    /** Updates the item's sort order based on the last-known pointer position. */\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    DragRef.prototype._sortFromLastPointerPosition = /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    };\n    /** Unsubscribes from the global subscriptions. */\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._removeSubscriptions = /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    };\n    /** Destroys the preview element and its ViewRef. */\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._destroyPreview = /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._preview) {\n            removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    };\n    /** Destroys the placeholder element and its ViewRef. */\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._destroyPlaceholder = /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._placeholder) {\n            removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    };\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    DragRef.prototype._endDragSequence = /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            function () {\n                _this._cleanupDragArtifacts(event);\n                _this._cleanupCachedDimensions();\n                _this._dragDropRegistry.stopDragging(_this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                _this.ended.next({\n                    source: _this,\n                    distance: _this._getDragDistance(_this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    };\n    /** Starts the dragging sequence. */\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._startDragSequence = /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            var element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            var preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            var placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild((/** @type {?} */ (element.parentNode)).replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n        }\n    };\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    DragRef.prototype._initializeDragSequence = /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        var _this = this;\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        var isDragging = this.isDragging();\n        /** @type {?} */\n        var isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        var isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        var rootElement = this._rootElement;\n        /** @type {?} */\n        var isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = (/** @type {?} */ (this._dropContainer));\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._scrollPosition = _this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?\n            { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        var pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    };\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._cleanupDragArtifacts = /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            (/** @type {?} */ (this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            coerceElement(this._initialContainer.element).appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var container = (/** @type {?} */ (_this._dropContainer));\n            /** @type {?} */\n            var currentIndex = container.getItemIndex(_this);\n            /** @type {?} */\n            var pointerPosition = _this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            var distance = _this._getDragDistance(_this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            var isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            _this.ended.next({ source: _this, distance: distance });\n            _this.dropped.next({\n                item: _this,\n                currentIndex: currentIndex,\n                previousIndex: _this._initialContainer.getItemIndex(_this),\n                container: container,\n                previousContainer: _this._initialContainer,\n                isPointerOverContainer: isPointerOverContainer,\n                distance: distance\n            });\n            container.drop(_this, currentIndex, _this._initialContainer, isPointerOverContainer, distance);\n            _this._dropContainer = _this._initialContainer;\n        }));\n    };\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    DragRef.prototype._updateActiveDropContainer = /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var x = _a.x, y = _a.y;\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        var newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            function () {\n                // Notify the old container that the item has left.\n                _this.exited.next({ item: _this, container: (/** @type {?} */ (_this._dropContainer)) });\n                (/** @type {?} */ (_this._dropContainer)).exit(_this);\n                // Notify the new container that the item has entered.\n                _this._dropContainer = (/** @type {?} */ (newContainer));\n                _this._dropContainer.enter(_this, x, y);\n                _this.entered.next({\n                    item: _this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(_this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    };\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._createPreviewElement = /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var previewConfig = this._previewTemplate;\n        /** @type {?} */\n        var previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        var preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            var viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            preview.style.transform =\n                getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            var element = this._rootElement;\n            /** @type {?} */\n            var elementRect = element.getBoundingClientRect();\n            preview = deepCloneNode(element);\n            preview.style.width = elementRect.width + \"px\";\n            preview.style.height = elementRect.height + \"px\";\n            preview.style.transform = getTransform(elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        return preview;\n    };\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    DragRef.prototype._animatePreviewToPlaceholder = /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    function () {\n        var _this = this;\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        var placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        var duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            function (resolve) {\n                /** @type {?} */\n                var handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) {\n                    if (!event || (event.target === _this._preview && event.propertyName === 'transform')) {\n                        _this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                var timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                _this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    };\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._createPlaceholderElement = /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        var placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        var placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    };\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    DragRef.prototype._getPointerPositionInElement = /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (referenceElement, event) {\n        /** @type {?} */\n        var elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        var handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        var referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        var point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        var x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        var y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    };\n    /** Determines the point of the page that was touched by the user. */\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._getPointerPositionOnPage = /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        var point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    };\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    DragRef.prototype._getConstrainedPointerPosition = /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        var constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        var dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            var _a = this._pickupPositionInElement, pickupX = _a.x, pickupY = _a.y;\n            /** @type {?} */\n            var boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            var previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            var minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            var maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            var minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            var maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    };\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    DragRef.prototype._updatePointerDirectionDelta = /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    function (pointerPositionOnPage) {\n        var x = pointerPositionOnPage.x, y = pointerPositionOnPage.y;\n        /** @type {?} */\n        var delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        var positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        var changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        var changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    };\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._toggleNativeDragInteractions = /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        var shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    };\n    /** Removes the manually-added event listeners from the root element. */\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    DragRef.prototype._removeRootElementListeners = /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    };\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    DragRef.prototype._applyRootElementTransform = /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        /** @type {?} */\n        var transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    };\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    DragRef.prototype._getDragDistance = /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    function (currentPosition) {\n        /** @type {?} */\n        var pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    };\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._cleanupCachedDimensions = /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._boundaryRect = this._previewRect = undefined;\n    };\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    DragRef.prototype._containInsideBoundaryOnResize = /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _a = this._passiveTransform, x = _a.x, y = _a.y;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        var boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        var elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        var leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        var rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        var topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        var bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y: y, x: x });\n        }\n    };\n    return DragRef;\n}());\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return \"translate3d(\" + Math.round(x) + \"px, \" + Math.round(y) + \"px, 0)\";\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    var clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    var descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    var descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (var i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        var cloneCanvases = clone.querySelectorAll('canvas');\n        for (var i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            var correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove an element from the DOM and to do all the necessary null checks.\n * @param {?} element Element to be removed.\n * @return {?}\n */\nfunction removeElement(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    var rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        var wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    var from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    var to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    var target = array[from];\n    /** @type {?} */\n    var delta = to < from ? -1 : 1;\n    for (var i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    var from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    var to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    var to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop refs.\n * @type {?}\n */\nvar _uniqueIdCounter = 0;\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nvar DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nvar SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nvar AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nvar  /**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nDropListRef = /** @class */ (function () {\n    function DropListRef(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        var _this = this;\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Unique ID for the drop list.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 8.0.0\n         */\n        this.id = \"cdk-drop-list-ref-\" + _uniqueIdCounter++;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        function () { return true; });\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the container's scroll position.\n         */\n        this._scrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the scroll position of the viewport.\n         */\n        this._viewportScrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Handles the container being scrolled. Has to be an arrow function to preserve the context.\n         */\n        this._handleScroll = (/**\n         * @return {?}\n         */\n        function () {\n            if (!_this.isDragging()) {\n                return;\n            }\n            /** @type {?} */\n            var element = coerceElement(_this.element);\n            _this._updateAfterScroll(_this._scrollPosition, element.scrollTop, element.scrollLeft);\n        });\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        function () {\n            _this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(_this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () {\n                /** @type {?} */\n                var node = _this._scrollNode;\n                if (_this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (_this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (_this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (_this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        /** @type {?} */\n        var nativeNode = this.element = coerceElement(element);\n        this._shadowRoot = getShadowRoot(nativeNode) || _document;\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    DropListRef.prototype.dispose = /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    function () {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._dragDropRegistry.removeDropContainer(this);\n    };\n    /** Whether an item from this list is currently being dragged. */\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    DropListRef.prototype.isDragging = /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._isDragging;\n    };\n    /** Starts dragging an item. */\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    DropListRef.prototype.start = /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var element = coerceElement(this.element);\n        this.beforeStarted.next();\n        this._isDragging = true;\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._startReceiving(_this); }));\n        this._removeListeners();\n        // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () { return element.addEventListener('scroll', _this._handleScroll); }));\n        }\n        else {\n            element.addEventListener('scroll', this._handleScroll);\n        }\n        // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.\n        if (this._viewportRuler) {\n            this._listenToScrollEvents();\n        }\n    };\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     */\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype.enter = /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        var newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n        if (newIndex === -1) {\n            // We use the coordinates of where the item entered the drop\n            // zone to figure out at which index it should be inserted.\n            newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        }\n        /** @type {?} */\n        var activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        var currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        var placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        var newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            var element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item: item, container: this, currentIndex: this.getItemIndex(item) });\n    };\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    DropListRef.prototype.exit = /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    function (item) {\n        this._reset();\n        this.exited.next({ item: item, container: this });\n    };\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @breaking-change 9.0.0 `distance` parameter to become required.\n     */\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    DropListRef.prototype.drop = /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    function (item, currentIndex, previousContainer, isPointerOverContainer, distance) {\n        if (distance === void 0) { distance = { x: 0, y: 0 }; }\n        this._reset();\n        this.dropped.next({\n            item: item,\n            currentIndex: currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            previousContainer: previousContainer,\n            isPointerOverContainer: isPointerOverContainer,\n            distance: distance\n        });\n    };\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    DropListRef.prototype.withItems = /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    function (items) {\n        var _this = this;\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return item._withDropContainer((/** @type {?} */ (_this))); }));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    };\n    /** Sets the layout direction of the drop list. */\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    DropListRef.prototype.withDirection = /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    function (direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    DropListRef.prototype.connectedTo = /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    function (connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    DropListRef.prototype.withOrientation = /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    function (orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    DropListRef.prototype.getItemIndex = /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    function (item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        var items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        function (currentItem) { return currentItem.drag === item; }));\n    };\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    DropListRef.prototype.isReceiving = /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    function () {\n        return this._activeSiblings.size > 0;\n    };\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    DropListRef.prototype._sortItem = /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        var siblings = this._itemPositions;\n        /** @type {?} */\n        var newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        function (currentItem) { return currentItem.drag === item; }));\n        /** @type {?} */\n        var siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        var currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        var newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        var delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        var itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        var siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        var oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item: item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        function (sibling, index) {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            var isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            var offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            var elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = \"translate3d(\" + Math.round(sibling.offset) + \"px, 0, 0)\";\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = \"translate3d(0, \" + Math.round(sibling.offset) + \"px, 0)\";\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    };\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._startScrollingIfNecessary = /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    function (pointerX, pointerY) {\n        var _a;\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        var scrollNode;\n        /** @type {?} */\n        var verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        var horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling the container.\n        if (this._isPointerNearDropContainer(pointerX, pointerY)) {\n            /** @type {?} */\n            var element = coerceElement(this.element);\n            _a = getElementScrollDirections(element, this._clientRect, pointerX, pointerY), verticalScrollDirection = _a[0], horizontalScrollDirection = _a[1];\n            if (verticalScrollDirection || horizontalScrollDirection) {\n                scrollNode = element;\n            }\n        }\n        // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        // Otherwise check if we can start scrolling the viewport.\n        if (this._viewportRuler && !verticalScrollDirection && !horizontalScrollDirection) {\n            var _b = this._viewportRuler.getViewportSize(), width = _b.width, height = _b.height;\n            /** @type {?} */\n            var clientRect = { width: width, height: height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(this._startScrollInterval);\n                }\n                else {\n                    this._startScrollInterval();\n                }\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    };\n    /** Stops any currently-running auto-scroll sequences. */\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    DropListRef.prototype._stopScrolling = /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    function () {\n        this._stopScrollTimers.next();\n    };\n    /** Caches the position of the drop list. */\n    /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheOwnPosition = /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = coerceElement(this.element);\n        this._clientRect = getMutableClientRect(element);\n        this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };\n    };\n    /** Refreshes the position cache of the items and sibling containers. */\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheItemPositions = /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        function (drag) {\n            /** @type {?} */\n            var elementToMeasure = _this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            return { drag: drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        function (a, b) {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    };\n    /** Resets the container to its initial state. */\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._reset = /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._isDragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        function (item) { return item.getRootElement().style.transform = ''; }));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._stopReceiving(_this); }));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._removeListeners();\n    };\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    DropListRef.prototype._getSiblingOffsetPx = /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    function (currentIndex, siblings, delta) {\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        var immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        var siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            var start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            var end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    };\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @param pointerX Coordinates along the X axis.\n     * @param pointerY Coordinates along the Y axis.\n     */\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._isPointerNearDropContainer = /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    function (pointerX, pointerY) {\n        var _a = this._clientRect, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        /** @type {?} */\n        var xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        var yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    };\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    DropListRef.prototype._getItemOffsetPx = /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    function (currentPosition, newPosition, delta) {\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        var itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    };\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    DropListRef.prototype._getItemIndexFromPointerPosition = /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, delta) {\n        var _this = this;\n        /** @type {?} */\n        var isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        function (_a, _, array) {\n            var drag = _a.drag, clientRect = _a.clientRect;\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                var direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === _this._previousSwap.drag && direction === _this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    };\n    /** Caches the current items in the list and their positions. */\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._cacheItems = /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheOwnPosition();\n    };\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @param scrollPosition Object that is keeping track of the scroll position.\n     * @param newTop New top scroll position.\n     * @param newLeft New left scroll position.\n     * @param extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     */\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    DropListRef.prototype._updateAfterScroll = /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    function (scrollPosition, newTop, newLeft, extraClientRect) {\n        var _this = this;\n        /** @type {?} */\n        var topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        var leftDifference = scrollPosition.left - newLeft;\n        if (extraClientRect) {\n            adjustClientRect(extraClientRect, topDifference, leftDifference);\n        }\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var clientRect = _a.clientRect;\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var drag = _a.drag;\n            if (_this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    };\n    /** Removes the event listeners associated with this drop list. */\n    /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._removeListeners = /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    function () {\n        coerceElement(this.element).removeEventListener('scroll', this._handleScroll);\n        this._viewportScrollSubscription.unsubscribe();\n    };\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._isOverContainer = /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    };\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._getSiblingContainerFromPosition = /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        function (sibling) { return sibling._canReceive(item, x, y); }));\n    };\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    DropListRef.prototype._canReceive = /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {\n            return false;\n        }\n        /** @type {?} */\n        var elementFromPoint = (/** @type {?} */ (this._shadowRoot.elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        var nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    };\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    DropListRef.prototype._startReceiving = /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    function (sibling) {\n        /** @type {?} */\n        var activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheOwnPosition();\n            this._listenToScrollEvents();\n        }\n    };\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    DropListRef.prototype._stopReceiving = /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    function (sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    };\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    DropListRef.prototype._listenToScrollEvents = /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._viewportScrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.isDragging()) {\n                /** @type {?} */\n                var newPosition = (/** @type {?} */ (_this._viewportRuler)).getViewportScrollPosition();\n                _this._updateAfterScroll(_this._viewportScrollPosition, newPosition.top, newPosition.left, _this._clientRect);\n            }\n            else if (_this.isReceiving()) {\n                _this._cacheOwnPosition();\n            }\n        }));\n    };\n    return DropListRef;\n}());\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (var i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    var top = clientRect.top, bottom = clientRect.bottom, left = clientRect.left, right = clientRect.right;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    var clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    var top = clientRect.top, bottom = clientRect.bottom, height = clientRect.height;\n    /** @type {?} */\n    var yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    var left = clientRect.left, right = clientRect.right, width = clientRect.width;\n    /** @type {?} */\n    var xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    var computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    var computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    var verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    var horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        var scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        var scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        var rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nvar activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nvar DragDropRegistry = /** @class */ (function () {\n    function DragDropRegistry(_ngZone, _document) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (_this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDropContainer = /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(\"Drop instance with id \\\"\" + drop.id + \"\\\" has already been registered.\");\n            }\n            this._dropInstances.add(drop);\n        }\n    };\n    /** Adds a drag item instance to the registry. */\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.registerDragItem = /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        var _this = this;\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                _this._document.addEventListener('touchmove', _this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    };\n    /** Removes a drop container from the registry. */\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDropContainer = /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    function (drop) {\n        this._dropInstances.delete(drop);\n    };\n    /** Removes a drag item instance from the registry. */\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.removeDragItem = /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    };\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    DragDropRegistry.prototype.startDragging = /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    function (drag, event) {\n        var _this = this;\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            var isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            var moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            var upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.pointerMove.next((/** @type {?} */ (e))); }),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.pointerUp.next((/** @type {?} */ (e))); }),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                function (e) { return _this.scroll.next(e); }),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                _this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                function (config, name) {\n                    _this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    };\n    /** Stops dragging a drag item instance. */\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.stopDragging = /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    };\n    /** Gets whether a drag item instance is currently being dragged. */\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    DragDropRegistry.prototype.isDragging = /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    function (drag) {\n        return this._activeDragInstances.has(drag);\n    };\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 8.0.0\n     */\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    DragDropRegistry.prototype.getDropContainer = /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        return Array.from(this._dropInstances).find((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return instance.id === id; }));\n    };\n    /**\n     * @return {?}\n     */\n    DragDropRegistry.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return _this.removeDragItem(instance); }));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        function (instance) { return _this.removeDropContainer(instance); }));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    };\n    /** Clears out the global event listeners from the `document`. */\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    DragDropRegistry.prototype._clearGlobalListeners = /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        function (config, name) {\n            _this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    };\n    DragDropRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    DragDropRegistry.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ DragDropRegistry.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n    return DragDropRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nvar DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nvar DragDrop = /** @class */ (function () {\n    function DragDrop(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    DragDrop.prototype.createDrag = /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    function (element, config) {\n        if (config === void 0) { config = DEFAULT_CONFIG; }\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    };\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    DragDrop.prototype.createDropList = /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    function (element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    };\n    DragDrop.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    DragDrop.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ViewportRuler },\n        { type: DragDropRegistry }\n    ]; };\n    /** @nocollapse */ DragDrop.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n    return DragDrop;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nvar CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @deprecated Use `CDK_DROP_LIST` instead.\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nvar CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nvar CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nvar CdkDragHandle = /** @class */ (function () {\n    function CdkDragHandle(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    Object.defineProperty(CdkDragHandle.prototype, \"disabled\", {\n        /** Whether starting to drag through this handle is disabled. */\n        get: /**\n         * Whether starting to drag through this handle is disabled.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._stateChanges.next(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDragHandle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    CdkDragHandle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragHandle.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n    ]; };\n    CdkDragHandle.propDecorators = {\n        disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n    };\n    return CdkDragHandle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nvar CdkDragPlaceholder = /** @class */ (function () {\n    function CdkDragPlaceholder(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPlaceholder.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPlaceholder.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPlaceholder.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPlaceholder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nvar CdkDragPreview = /** @class */ (function () {\n    function CdkDragPreview(templateRef) {\n        this.templateRef = templateRef;\n    }\n    CdkDragPreview.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[cdkDragPreview]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDragPreview.ctorParameters = function () { return [\n        { type: TemplateRef }\n    ]; };\n    CdkDragPreview.propDecorators = {\n        data: [{ type: Input }]\n    };\n    return CdkDragPreview;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n * @type {?}\n */\nvar CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nvar CdkDrag = /** @class */ (function () {\n    function CdkDrag(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        var _this = this;\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            /** @type {?} */\n            var subscription = _this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            function (movedEvent) { return ({\n                source: _this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }); }))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            function () {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, config);\n        this._dragRef.data = this;\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    Object.defineProperty(CdkDrag.prototype, \"boundaryElementSelector\", {\n        /**\n         * Selector that will be used to determine the element to which the draggable's position will\n         * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n         * element has been found\n         * @deprecated Use `boundaryElement` instead.\n         * @breaking-change 9.0.0\n         */\n        get: /**\n         * Selector that will be used to determine the element to which the draggable's position will\n         * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n         * element has been found\n         * @deprecated Use `boundaryElement` instead.\n         * \\@breaking-change 9.0.0\n         * @return {?}\n         */\n        function () {\n            return typeof this.boundaryElement === 'string' ? this.boundaryElement : (/** @type {?} */ (undefined));\n        },\n        set: /**\n         * @param {?} selector\n         * @return {?}\n         */\n        function (selector) {\n            this.boundaryElement = selector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkDrag.prototype, \"disabled\", {\n        /** Whether starting to drag this element is disabled. */\n        get: /**\n         * Whether starting to drag this element is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._dragRef.disabled = this._disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    CdkDrag.prototype.getPlaceholderElement = /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getPlaceholderElement();\n    };\n    /** Returns the root draggable element. */\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    CdkDrag.prototype.getRootElement = /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getRootElement();\n    };\n    /** Resets a standalone drag item to its initial position. */\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    CdkDrag.prototype.reset = /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    function () {\n        this._dragRef.reset();\n    };\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    CdkDrag.prototype.getFreeDragPosition = /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    function () {\n        return this._dragRef.getFreeDragPosition();\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._updateRootElement();\n            // Listen for any newly-added handles.\n            _this._handles.changes.pipe(startWith(_this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            function (handles) {\n                /** @type {?} */\n                var childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) { return handle._parentDrag === _this; }))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                function (handle) { return handle.element; }));\n                _this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            function (handles) {\n                return merge.apply(void 0, handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) { return item._stateChanges; })));\n            })), takeUntil(_this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            function (handleInstance) {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                var dragRef = _this._dragRef;\n                /** @type {?} */\n                var handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (_this.freeDragPosition) {\n                _this._dragRef.setFreeDragPosition(_this.freeDragPosition);\n            }\n        }));\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkDrag.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        /** @type {?} */\n        var rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        var positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkDrag.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    };\n    /** Syncs the root element with the `DragRef`. */\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    CdkDrag.prototype._updateRootElement = /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = this.element.nativeElement;\n        /** @type {?} */\n        var rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(\"cdkDrag must be attached to an element node. \" +\n                (\"Currently attached to \\\"\" + rootElement.nodeName + \"\\\".\"));\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    };\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    CdkDrag.prototype._getBoundaryElement = /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        var element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    };\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDrag.prototype._syncInputs = /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                var dir = _this._dir;\n                /** @type {?} */\n                var placeholder = _this._placeholderTemplate ? {\n                    template: _this._placeholderTemplate.templateRef,\n                    context: _this._placeholderTemplate.data,\n                    viewContainer: _this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                var preview = _this._previewTemplate ? {\n                    template: _this._previewTemplate.templateRef,\n                    context: _this._previewTemplate.data,\n                    viewContainer: _this._viewContainerRef\n                } : null;\n                ref.disabled = _this.disabled;\n                ref.lockAxis = _this.lockAxis;\n                ref.dragStartDelay = coerceNumberProperty(_this.dragStartDelay);\n                ref.constrainPosition = _this.constrainPosition;\n                ref\n                    .withBoundaryElement(_this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    };\n    /** Handles the events from the underlying `DragRef`. */\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDrag.prototype._handleEvents = /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.started.emit({ source: _this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this.released.emit({ source: _this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.ended.emit({ source: _this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.entered.emit({\n                container: event.container.data,\n                item: _this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.exited.emit({\n                container: event.container.data,\n                item: _this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: _this,\n                distance: event.distance\n            });\n        }));\n    };\n    CdkDrag.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': 'cdk-drag',\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDrag.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: NgZone },\n        { type: ViewContainerRef },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: DragDrop },\n        { type: ChangeDetectorRef }\n    ]; };\n    CdkDrag.propDecorators = {\n        _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n        _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview, { static: false },] }],\n        _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder, { static: false },] }],\n        data: [{ type: Input, args: ['cdkDragData',] }],\n        lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n        rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n        boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n        dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n        freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n        disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n        constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n        started: [{ type: Output, args: ['cdkDragStarted',] }],\n        released: [{ type: Output, args: ['cdkDragReleased',] }],\n        ended: [{ type: Output, args: ['cdkDragEnded',] }],\n        entered: [{ type: Output, args: ['cdkDragEntered',] }],\n        exited: [{ type: Output, args: ['cdkDragExited',] }],\n        dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n        moved: [{ type: Output, args: ['cdkDragMoved',] }]\n    };\n    return CdkDrag;\n}());\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    var currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nvar CdkDropListGroup = /** @class */ (function () {\n    function CdkDropListGroup() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    Object.defineProperty(CdkDropListGroup.prototype, \"disabled\", {\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        get: /**\n         * Whether starting a dragging sequence from inside this group is disabled.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDropListGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._items.clear();\n    };\n    CdkDropListGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                },] },\n    ];\n    CdkDropListGroup.propDecorators = {\n        disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n    };\n    return CdkDropListGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nvar _uniqueIdCounter$1 = 0;\nvar ɵ0 = undefined;\n// @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards\n// compatiblity. The implements clause, as well as all the methods that it enforces can\n// be removed when `CdkDropListContainer` is deleted.\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nvar CdkDropList = /** @class */ (function () {\n    function CdkDropList(element, dragDrop, _changeDetectorRef, _dir, _group) {\n        var _this = this;\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = \"cdk-drop-list-\" + _uniqueIdCounter$1++;\n        this._disabled = false;\n        this._sortingDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        function () { return true; });\n        /**\n         * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        function (drag, drop) {\n            return _this.enterPredicate(drag.data, drop.data);\n        });\n        this._syncInputs(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    Object.defineProperty(CdkDropList.prototype, \"disabled\", {\n        /** Whether starting a dragging sequence from this container is disabled. */\n        get: /**\n         * Whether starting a dragging sequence from this container is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (!!this._group && this._group.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkDropList.prototype, \"sortingDisabled\", {\n        /** Whether sorting within this drop list is disabled. */\n        get: /**\n         * Whether sorting within this drop list is disabled.\n         * @return {?}\n         */\n        function () { return this._sortingDisabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._sortingDisabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._draggables.changes\n            .pipe(startWith(this._draggables), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        function (items) {\n            _this._dropListRef.withItems(items.map((/**\n             * @param {?} drag\n             * @return {?}\n             */\n            function (drag) { return drag._dragRef; })));\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    CdkDropList.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Starts dragging an item. */\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    CdkDropList.prototype.start = /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    function () {\n        this._dropListRef.start();\n    };\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     */\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    CdkDropList.prototype.drop = /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    function (item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, ((/** @type {?} */ (previousContainer)))._dropListRef, isPointerOverContainer);\n    };\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     */\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype.enter = /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    };\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    CdkDropList.prototype.exit = /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    function (item) {\n        this._dropListRef.exit(item._dragRef);\n    };\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    CdkDropList.prototype.getItemIndex = /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    function (item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    };\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._sortItem = /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    function (item, pointerX, pointerY, pointerDelta) {\n        return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);\n    };\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._getSiblingContainerFromPosition = /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    function (item, x, y) {\n        /** @type {?} */\n        var result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);\n        return result ? result.data : null;\n    };\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    CdkDropList.prototype._isOverContainer = /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    function (x, y) {\n        return this._dropListRef._isOverContainer(x, y);\n    };\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDropList.prototype._syncInputs = /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { return ref.withDirection(value); }));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var siblings = coerceArray(_this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            function (drop) {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    function (list) { return list.id === drop; })))) : drop;\n            }));\n            if (_this._group) {\n                _this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                function (drop) {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = _this.disabled;\n            ref.lockAxis = _this.lockAxis;\n            ref.sortingDisabled = _this.sortingDisabled;\n            ref.autoScrollDisabled = _this.autoScrollDisabled;\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            function (drop) { return drop && drop !== _this; })).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            function (list) { return list._dropListRef; })))\n                .withOrientation(_this.orientation);\n        }));\n    };\n    /** Handles events from the underlying DropListRef. */\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    CdkDropList.prototype._handleEvents = /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) {\n        var _this = this;\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        function () {\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.entered.emit({\n                container: _this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.exited.emit({\n                container: _this,\n                item: event.item.data\n            });\n            _this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: _this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            _this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            _this._changeDetectorRef.markForCheck();\n        }));\n    };\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     */\n    CdkDropList._dropLists = [];\n    CdkDropList.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CdkDropListGroup, useValue: ɵ0 },\n                        { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    CdkDropList.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: DragDrop },\n        { type: ChangeDetectorRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] }\n    ]; };\n    CdkDropList.propDecorators = {\n        _draggables: [{ type: ContentChildren, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    function () { return CdkDrag; })), {\n                        // Explicitly set to false since some of the logic below makes assumptions about it.\n                        // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                        descendants: false\n                    },] }],\n        connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n        data: [{ type: Input, args: ['cdkDropListData',] }],\n        orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n        id: [{ type: Input }],\n        lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n        disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n        sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n        enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n        autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n        dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n        entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n        exited: [{ type: Output, args: ['cdkDropListExited',] }],\n        sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n    };\n    return CdkDropList;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar DragDropModule = /** @class */ (function () {\n    function DragDropModule() {\n    }\n    DragDropModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [\n                        DragDrop,\n                    ]\n                },] },\n    ];\n    return DragDropModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, CDK_DRAG_PARENT as ɵb };\n//# sourceMappingURL=drag-drop.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nvar hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nvar Platform = /** @class */ (function () {\n    /**\n     * @breaking-change 8.0.0 remove optional decorator\n     */\n    function Platform(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    Platform.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Platform.ctorParameters = function () { return [\n        { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n    ]; };\n    /** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n    return Platform;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PlatformModule = /** @class */ (function () {\n    function PlatformModule() {\n    }\n    PlatformModule.decorators = [\n        { type: NgModule, args: [{},] },\n    ];\n    return PlatformModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nvar supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nvar candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    var featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nvar supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                function () { return supportsPassiveEvents = true; })\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nvar rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        var scrollContainer = document.createElement('div');\n        /** @type {?} */\n        var containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        var content = document.createElement('div');\n        /** @type {?} */\n        var contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nvar shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        var head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType, _supportsShadowDom };\n//# sourceMappingURL=platform.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, asapScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { __extends } from 'tslib';\nimport { ArrayDataSource, isDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nvar VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nvar  /**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nFixedSizeVirtualScrollStrategy = /** @class */ (function () {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    function FixedSizeVirtualScrollStrategy(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    function (viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.detach = /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    function () {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    };\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.updateItemAndBufferSize = /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    function (itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onContentScrolled = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onDataLengthChanged = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onContentRendered = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () { };\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.onRenderedOffsetChanged = /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrollToIndex = /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    function (index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    };\n    /** Update the viewport's total content size. */\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype._updateTotalContentSize = /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    };\n    /** Update the viewport's rendered range. */\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype._updateRenderedRange = /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        var scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        var firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        var renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        var newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        var viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        var dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        var startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            var endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    };\n    return FixedSizeVirtualScrollStrategy;\n}());\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nvar CdkFixedSizeVirtualScroll = /** @class */ (function () {\n    function CdkFixedSizeVirtualScroll() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"itemSize\", {\n        /** The size of the items in the list (in pixels). */\n        get: /**\n         * The size of the items in the list (in pixels).\n         * @return {?}\n         */\n        function () { return this._itemSize; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._itemSize = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"minBufferPx\", {\n        /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         */\n        get: /**\n         * The minimum amount of buffer rendered beyond the viewport (in pixels).\n         * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n         * @return {?}\n         */\n        function () { return this._minBufferPx; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._minBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkFixedSizeVirtualScroll.prototype, \"maxBufferPx\", {\n        /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         */\n        get: /**\n         * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n         * @return {?}\n         */\n        function () { return this._maxBufferPx; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._maxBufferPx = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    };\n    CdkFixedSizeVirtualScroll.decorators = [\n        { type: Directive, args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [{\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef((/**\n                                 * @return {?}\n                                 */\n                                function () { return CdkFixedSizeVirtualScroll; }))],\n                        }],\n                },] },\n    ];\n    CdkFixedSizeVirtualScroll.propDecorators = {\n        itemSize: [{ type: Input }],\n        minBufferPx: [{ type: Input }],\n        maxBufferPx: [{ type: Input }]\n    };\n    return CdkFixedSizeVirtualScroll;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = /** @class */ (function () {\n    function ScrollDispatcher(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    function (scrollable) {\n        var _this = this;\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { return _this._scrolled.next(scrollable); })));\n        }\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    function (scrollable) {\n        /** @type {?} */\n        var scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    };\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    function (auditTimeInMs) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            if (!_this._globalSubscription) {\n                _this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            var subscription = auditTimeInMs > 0 ?\n                _this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                _this._scrolled.subscribe(observer);\n            _this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            function () {\n                subscription.unsubscribe();\n                _this._scrolledCount--;\n                if (!_this._scrolledCount) {\n                    _this._removeGlobalListener();\n                }\n            });\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        function (_, container) { return _this.deregister(container); }));\n        this._scrolled.complete();\n    };\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ancestorScrolled = /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    function (elementRef, auditTimeInMs) {\n        /** @type {?} */\n        var ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        function (target) {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    };\n    /** Returns all registered Scrollables that contain the provided element. */\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getAncestorScrollContainers = /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (elementRef) {\n        var _this = this;\n        /** @type {?} */\n        var scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        function (_subscription, scrollable) {\n            if (_this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    };\n    /** Returns true if the element is contained within the provided Scrollable. */\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._scrollableContainsElement = /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (scrollable, elementRef) {\n        /** @type {?} */\n        var element = elementRef.nativeElement;\n        /** @type {?} */\n        var scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    };\n    /** Sets up the global scroll listeners. */\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._addGlobalListener = /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            function () { return _this._scrolled.next(); }));\n        }));\n    };\n    /** Cleans up the global scroll listener. */\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._removeGlobalListener = /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    };\n    ScrollDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ScrollDispatcher.ctorParameters = function () { return [\n        { type: NgZone },\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ ScrollDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n    return ScrollDispatcher;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nvar SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar CdkScrollable = /** @class */ (function () {\n    function CdkScrollable(elementRef, scrollDispatcher, ngZone, dir) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            return _this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () {\n                return fromEvent(_this.elementRef.nativeElement, 'scroll').pipe(takeUntil(_this._destroyed))\n                    .subscribe(observer);\n            }));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.scrollDispatcher.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    CdkScrollable.prototype.elementScrolled = /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    function () {\n        return this._elementScrolled;\n    };\n    /** Gets the ElementRef for the viewport. */\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    CdkScrollable.prototype.getElementRef = /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    function () {\n        return this.elementRef;\n    };\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    CdkScrollable.prototype.scrollTo = /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    function (options) {\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    };\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    CdkScrollable.prototype._applyScrollToOptions = /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    };\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    CdkScrollable.prototype.measureScrollOffset = /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    function (from) {\n        /** @type {?} */\n        var LEFT = 'left';\n        /** @type {?} */\n        var RIGHT = 'right';\n        /** @type {?} */\n        var el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    };\n    CdkScrollable.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkScrollable.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: NgZone },\n        { type: Directionality, decorators: [{ type: Optional }] }\n    ]; };\n    return CdkScrollable;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nvar SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nvar CdkVirtualScrollViewport = /** @class */ (function (_super) {\n    __extends(CdkVirtualScrollViewport, _super);\n    function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        var _this = _super.call(this, elementRef, scrollDispatcher, ngZone, dir) || this;\n        _this.elementRef = elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        _this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        _this._renderedRangeSubject = new Subject();\n        _this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        _this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        function (observer) {\n            return _this._scrollStrategy.scrolledIndexChange.subscribe((/**\n             * @param {?} index\n             * @return {?}\n             */\n            function (index) {\n                return Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                function () { return _this.ngZone.run((/**\n                 * @return {?}\n                 */\n                function () { return observer.next(index); })); }));\n            }));\n        }));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        _this.renderedRangeStream = _this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        _this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        _this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        _this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        _this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        _this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        _this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        _this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        _this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        _this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        _this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        return _this;\n    }\n    Object.defineProperty(CdkVirtualScrollViewport.prototype, \"orientation\", {\n        /** The direction the viewport scrolls. */\n        get: /**\n         * The direction the viewport scrolls.\n         * @return {?}\n         */\n        function () {\n            return this._orientation;\n        },\n        set: /**\n         * @param {?} orientation\n         * @return {?}\n         */\n        function (orientation) {\n            if (this._orientation !== orientation) {\n                this._orientation = orientation;\n                this._calculateSpacerSize();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () { return Promise.resolve().then((/**\n         * @return {?}\n         */\n        function () {\n            _this._measureViewportSize();\n            _this._scrollStrategy.attach(_this);\n            _this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            function () { return _this._scrollStrategy.onContentScrolled(); }));\n            _this._markChangeDetectionNeeded();\n        })); }));\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    /** Attaches a `CdkVirtualForOf` to this viewport. */\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.attach = /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    function (forOf) {\n        var _this = this;\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this._forOf = forOf;\n            _this._forOf.dataStream.pipe(takeUntil(_this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            function (data) {\n                /** @type {?} */\n                var newLength = data.length;\n                if (newLength !== _this._dataLength) {\n                    _this._dataLength = newLength;\n                    _this._scrollStrategy.onDataLengthChanged();\n                }\n                _this._doChangeDetection();\n            }));\n        }));\n    };\n    /** Detaches the current `CdkVirtualForOf`. */\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.detach = /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    function () {\n        this._forOf = null;\n        this._detachedSubject.next();\n    };\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getDataLength = /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    function () {\n        return this._dataLength;\n    };\n    /** Gets the size of the viewport (in pixels). */\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getViewportSize = /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    function () {\n        return this._viewportSize;\n    };\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getRenderedRange = \n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    function () {\n        return this._renderedRange;\n    };\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setTotalContentSize = /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    function (size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    };\n    /** Sets the currently rendered range of indices. */\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedRange = /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    function (range) {\n        var _this = this;\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            function () { return _this._scrollStrategy.onContentRendered(); }));\n        }\n    };\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.getOffsetToRenderedContentStart = /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    function () {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    };\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.setRenderedContentOffset = /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    function (offset, to) {\n        var _this = this;\n        if (to === void 0) { to = 'to-start'; }\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        var isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        var isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        var axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        var axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        var transform = \"translate\" + axis + \"(\" + Number(axisDirection * offset) + \"px)\";\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += \" translate\" + axis + \"(-100%)\";\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            function () {\n                if (_this._renderedContentOffsetNeedsRewrite) {\n                    _this._renderedContentOffset -= _this.measureRenderedContentSize();\n                    _this._renderedContentOffsetNeedsRewrite = false;\n                    _this.setRenderedContentOffset(_this._renderedContentOffset);\n                }\n                else {\n                    _this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    };\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrollToOffset = /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    function (offset, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        /** @type {?} */\n        var options = { behavior: behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    };\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrollToIndex = /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    function (index, behavior) {\n        if (behavior === void 0) { behavior = 'auto'; }\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    };\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureScrollOffset = /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    function (from) {\n        return _super.prototype.measureScrollOffset.call(this, from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    };\n    /** Measure the combined size of all of the rendered items. */\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureRenderedContentSize = /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    };\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.measureRangeSize = /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    function (range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    };\n    /** Update the viewport dimensions and re-render. */\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype.checkViewportSize = /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    function () {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    };\n    /** Measure the viewport size. */\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._measureViewportSize = /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    };\n    /** Queue up change detection to run. */\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._markChangeDetectionNeeded = /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    function (runAfter) {\n        var _this = this;\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            function () { return Promise.resolve().then((/**\n             * @return {?}\n             */\n            function () {\n                _this._doChangeDetection();\n            })); }));\n        }\n    };\n    /** Run change detection. */\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._doChangeDetection = /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        function () { return _this._changeDetectorRef.markForCheck(); }));\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        var runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (var _i = 0, runAfterChangeDetection_1 = runAfterChangeDetection; _i < runAfterChangeDetection_1.length; _i++) {\n            var fn = runAfterChangeDetection_1[_i];\n            fn();\n        }\n    };\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    CdkVirtualScrollViewport.prototype._calculateSpacerSize = /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : this._totalContentSize + \"px\";\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? this._totalContentSize + \"px\" : '';\n    };\n    CdkVirtualScrollViewport.decorators = [\n        { type: Component, args: [{selector: 'cdk-virtual-scroll-viewport',\n                    template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\",\n                    styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"],\n                    host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [{\n                            provide: CdkScrollable,\n                            useExisting: CdkVirtualScrollViewport,\n                        }]\n                },] },\n    ];\n    /** @nocollapse */\n    CdkVirtualScrollViewport.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: NgZone },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ScrollDispatcher }\n    ]; };\n    CdkVirtualScrollViewport.propDecorators = {\n        orientation: [{ type: Input }],\n        scrolledIndexChange: [{ type: Output }],\n        _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n    };\n    return CdkVirtualScrollViewport;\n}(CdkScrollable));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    var el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    var rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nvar CdkVirtualForOf = /** @class */ (function () {\n    function CdkVirtualForOf(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        var _this = this;\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        function (_a) {\n            var prev = _a[0], cur = _a[1];\n            return _this._changeDataSource(prev, cur);\n        })), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            _this._data = data;\n            _this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        function (range) {\n            _this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            function () { return _this.viewChange.next(_this._renderedRange); }));\n            _this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForOf\", {\n        /** The DataSource to display. */\n        get: /**\n         * The DataSource to display.\n         * @return {?}\n         */\n        function () {\n            return this._cdkVirtualForOf;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._cdkVirtualForOf = value;\n            /** @type {?} */\n            var ds = isDataSource(value) ? value :\n                // Slice the value if its an NgIterable to ensure we're working with an array.\n                new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n            this._dataSourceChanges.next(ds);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTrackBy\", {\n        /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         */\n        get: /**\n         * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n         * the item and produces a value to be used as the item's identity when tracking changes.\n         * @return {?}\n         */\n        function () {\n            return this._cdkVirtualForTrackBy;\n        },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            var _this = this;\n            this._needsUpdate = true;\n            this._cdkVirtualForTrackBy = fn ?\n                (/**\n                 * @param {?} index\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (index, item) { return fn(index + (_this._renderedRange ? _this._renderedRange.start : 0), item); }) :\n                undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkVirtualForOf.prototype, \"cdkVirtualForTemplate\", {\n        /** The template used to stamp out new elements. */\n        set: /**\n         * The template used to stamp out new elements.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this._needsUpdate = true;\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.measureRangeSize = /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    function (range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(\"Error: attempted to measure an item that isn't rendered.\");\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        var renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        var rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        var totalSize = 0;\n        /** @type {?} */\n        var i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            var view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            var j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            var changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (var _i = 0, _a = this._templateCache; _i < _a.length; _i++) {\n            var view = _a[_i];\n            view.destroy();\n        }\n    };\n    /** React to scroll state changes in the viewport. */\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._onRenderedDataChange = /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    };\n    /** Swap out one `DataSource` for another. */\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._changeDataSource = /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    function (oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    };\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._updateContext = /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var count = this._data.length;\n        /** @type {?} */\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            var view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    };\n    /** Apply changes to the DOM. */\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._applyChanges = /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        function (record, adjustedPreviousIndex, currentIndex) {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                var view = _this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                _this._cacheView(_this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                var view = (/** @type {?} */ (_this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                _this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        function (record) {\n            /** @type {?} */\n            var view = (/** @type {?} */ (_this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        var count = this._data.length;\n        /** @type {?} */\n        var i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            var view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    };\n    /** Cache the given detached view. */\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._cacheView = /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    function (view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            var index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    };\n    /** Inserts a view for a new item, either from the cache or by creating a new one. */\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._insertViewForNewItem = /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    };\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._updateComputedContextProperties = /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    };\n    /** Creates a new embedded view and moves it to the given index */\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._createEmbeddedViewAt = /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    };\n    /** Inserts a recycled view from the cache at the given index. */\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._insertViewFromCache = /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        /** @type {?} */\n        var cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    };\n    /** Detaches the embedded view at the given index. */\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    CdkVirtualForOf.prototype._detachView = /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    };\n    CdkVirtualForOf.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkVirtualForOf.ctorParameters = function () { return [\n        { type: ViewContainerRef },\n        { type: TemplateRef },\n        { type: IterableDiffers },\n        { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n        { type: NgZone }\n    ]; };\n    CdkVirtualForOf.propDecorators = {\n        cdkVirtualForOf: [{ type: Input }],\n        cdkVirtualForTrackBy: [{ type: Input }],\n        cdkVirtualForTemplate: [{ type: Input }],\n        cdkVirtualForTemplateCacheSize: [{ type: Input }]\n    };\n    return CdkVirtualForOf;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ScrollingModule = /** @class */ (function () {\n    function ScrollingModule() {\n    }\n    ScrollingModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule, PlatformModule],\n                    exports: [\n                        BidiModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkScrollable,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                    declarations: [\n                        CdkFixedSizeVirtualScroll,\n                        CdkScrollable,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                },] },\n    ];\n    return ScrollingModule;\n}());\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nvar ScrollDispatchModule = /** @class */ (function () {\n    function ScrollDispatchModule() {\n    }\n    ScrollDispatchModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [ScrollingModule],\n                    exports: [ScrollingModule],\n                },] },\n    ];\n    return ScrollDispatchModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nvar DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = /** @class */ (function () {\n    function ViewportRuler(_platform, ngZone) {\n        var _this = this;\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        function () {\n            _this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            _this._invalidateCache = _this.change().subscribe((/**\n             * @return {?}\n             */\n            function () { return _this._updateViewportSize(); }));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ViewportRuler.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._invalidateCache.unsubscribe();\n    };\n    /** Returns the viewport's width and height. */\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportSize = /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    function () {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        var output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    };\n    /** Gets a ClientRect for the viewport's bounds. */\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    function () {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        var scrollPosition = this.getViewportScrollPosition();\n        var _a = this.getViewportSize(), width = _a.width, height = _a.height;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /** Gets the (top, left) scroll position of the viewport. */\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    function () {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        var documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        var documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        var top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        var left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    ViewportRuler.prototype.change = /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    function (throttleTime) {\n        if (throttleTime === void 0) { throttleTime = DEFAULT_RESIZE_TIME; }\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    };\n    /** Updates the cached viewport size. */\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    ViewportRuler.prototype._updateViewportSize = /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    };\n    ViewportRuler.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ViewportRuler.ctorParameters = function () { return [\n        { type: Platform },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ ViewportRuler.ngInjectableDef = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n    return ViewportRuler;\n}());\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nvar VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n//# sourceMappingURL=scrolling.es5.js.map\n","export default \"<div class=\\\"playlist-container g-flex-column\\\">\\n  <div\\n    [formGroup]=\\\"playlistFormGroup\\\"\\n    class=\\\"edit_of_ g-flex-column__item-fixed g-flex g-flex--align-center\\\">\\n    <div class=\\\"lf_edit g-flex__item\\\">\\n      <textarea\\n        #playlistTextarea\\n        [formControlName]=\\\"CONTROLS_NAME.PLAYLIST\\\"\\n        cols=\\\"30\\\"\\n        rows=\\\"10\\\">\\n      </textarea>\\n    </div>\\n\\n    <div class=\\\"rg_edit g-flex__item-fixed g-flex-column\\\">\\n      <button\\n        class=\\\"create_btn g-flex g-flex--align-center g-flex--justify-center\\\"\\n        (click)=\\\"onAddPlaylist()\\\">\\n        {{ 'create' | translate }}\\n      </button>\\n\\n      <button\\n        class=\\\"edit_me_ g-flex g-flex--align-center g-flex--justify-center\\\"\\n        [disabled]=\\\"!selectedItemId\\\"\\n        (click)=\\\"onEditPlaylist(selectedItemId)\\\">\\n        {{ 'edit' | translate }}\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"edit_of_content g-flex-column__item g-flex-column\\\">\\n    <div class=\\\"head_of_edit_ g-flex-column__item-fixed\\\">\\n      <h2>{{ 'playlist' | translate }}</h2>\\n\\n      <button\\n        class=\\\"delete_elems\\\"\\n        [disabled]=\\\"!selectedItemId\\\"\\n        (click)=\\\"onDeletePlaylist()\\\">\\n        {{ 'delete' | translate }}\\n      </button>\\n    </div>\\n\\n    <div\\n      class=\\\"count_elems playlist-items g-flex-column__item g-flex-column g-scroll-y\\\"\\n      cdkDropList\\n      (cdkDropListDropped)=\\\"dropItem($event)\\\"\\n      [ngClass]=\\\"color + '_edit'\\\">\\n      <ng-container *ngFor=\\\"let item of playlists\\\">\\n        <div\\n          cdkDrag\\n          cdkDragBoundary=\\\".playlist-items\\\"\\n          class=\\\"dragged-element elem_of_cont_edit course by-user\\\"\\n          (click)=\\\"selectItem(item)\\\"\\n          [class.active_elem_]=\\\"item.id === selectedItemId && selectedItemId\\\">\\n          <p>{{ item.name }}</p>\\n\\n          <img class=\\\"moved-img\\\" src=\\\"../../assets/category.svg\\\">\\n        </div>\\n      </ng-container>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"category_player g-flex-column\\\">\\n  <div class=\\\"create_of_ g-flex-column__item-fixed g-flex g-flex--align-center\\\">\\n    <div class=\\\"hovered_btns_left\\\">\\n      <button\\n        class=\\\"hovered_btns {{ color }}_button\\\"\\n        [class.has-copied]=\\\"copiedSounds.length || copiedMixes.length\\\"\\n        [disabled]=\\\"!selectedItemId\\\"\\n        (click)=\\\"copySounds()\\\">\\n        {{ 'pCopy' | translate }}\\n      </button>\\n\\n      <ng-container *ngIf=\\\"selectedSounds.length && selectedMixes.length === 1; else saveMixTpl\\\">\\n        <button\\n          class=\\\"hovered_btns mix-btn\\\"\\n          [disabled]=\\\"!selectedSounds.length || selectedMixes.length > 1\\\"\\n          (click)=\\\"saveMix()\\\">\\n          {{ 'addSoundsToMix' | translate }}\\n        </button>\\n      </ng-container>\\n\\n      <ng-template #saveMixTpl>\\n        <button\\n          class=\\\"hovered_btns mix-btn\\\"\\n          [disabled]=\\\"selectedSounds.length < 2 || selectedMixes.length > 1\\\"\\n          (click)=\\\"saveMix()\\\">\\n          {{ 'saveMix' | translate }}\\n        </button>\\n      </ng-template>\\n    </div>\\n\\n    <div class=\\\"hovered_btns_right\\\">\\n      <button\\n        class=\\\"hovered_btns\\\"\\n        [disabled]=\\\"!selectedItemId || (!copiedSounds.length && !copiedMixes.length)\\\"\\n        (click)=\\\"pasteSounds()\\\">\\n        {{ 'pPaste' | translate }}\\n      </button>\\n\\n      <button\\n        class=\\\"hovered_btns mix-btn\\\"\\n        [disabled]=\\\"!selectedMixes.length\\\"\\n        (click)=\\\"resetMix()\\\">\\n        {{ 'reset' | translate }}\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"edit_of_content g-flex-column__item g-flex-column\\\">\\n    <div class=\\\"head_of_edit_ head_of_programm_sort g-flex-column__item-fixed\\\">\\n      <h2>{{ 'program' | translate }}</h2>\\n\\n      <a>{{ 'edit' | translate }}</a>\\n    </div>\\n\\n    <div class=\\\"g-flex-column__item g-scroll-y g-flex-column\\\">\\n      <div\\n        *ngIf=\\\"selectedItemMixes?.length\\\"\\n        cdkDropList\\n        #playlistDraggedMixesListElm=\\\"cdkDropList\\\"\\n        [cdkDropListData]=\\\"selectedItemMixes\\\"\\n        [cdkDropListConnectedTo]=\\\"[draggedFilteredSounds]\\\"\\n        (cdkDropListDropped)=\\\"dropMix($event)\\\"\\n        class=\\\"program_edit_ count_elems cont_of_edit_ mix\\\">\\n        <div\\n          *ngFor=\\\"let mix of selectedItemMixes\\\"\\n          class=\\\"elem_program\\\"\\n          cdkDragBoundary=\\\".program_edit_\\\"\\n          cdkDrag>\\n          <div class=\\\"lf_program programm-row g-flex__item\\\">\\n            <div class=\\\"preview_prog g-flex__item-fixed\\\">\\n              <div\\n                class=\\\"checkbox-wrapper\\\"\\n                (click)=\\\"changeSelectedMixes(mix, $event)\\\">\\n              </div>\\n\\n              <p class=\\\"checkbox_in_prog\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  id=\\\"playlistMix\\\"\\n                  [checked]=\\\"selectedMixes.indexOf(mix) !== -1\\\">\\n                <label for=\\\"playlistMix\\\"></label>\\n              </p>\\n            </div>\\n\\n            <div class=\\\"g-flex-column g-flex__item\\\">\\n              <div\\n                *ngFor=\\\"let sound of mix.sounds; let i = index\\\"\\n                class=\\\"g-flex g-flex--align-center\\\">\\n                <div\\n                  class=\\\"sound-label__mix g-flex__item\\\"\\n                  (click)=\\\"changeSelectedMixes(mix, $event)\\\">\\n                  {{ i + 1 }}. {{ sound.name }}\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"rf_program g-flex__item-fixed g-flex g-flex--align-center\\\">\\n              <p>{{ mix.duration }}</p>\\n\\n              <img\\n                src=\\\"../../assets/img/bin.png\\\"\\n                alt=\\\"bin\\\"\\n                class=\\\"bin_button\\\"\\n                (click)=\\\"removeMix(mix)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div\\n        cdkDropList\\n        #playlistDraggedSoundListElm=\\\"cdkDropList\\\"\\n        [cdkDropListData]=\\\"selectedItemSounds\\\"\\n        [cdkDropListConnectedTo]=\\\"[draggedFilteredSounds]\\\"\\n        (cdkDropListDropped)=\\\"dropSound($event)\\\"\\n        class=\\\"program_edit_ count_elems cont_of_edit_ sounds g-flex-column__item\\\">\\n        <div\\n          *ngFor=\\\"let sound of selectedItemSounds; let i = index\\\"\\n          class=\\\"elem_program\\\"\\n          cdkDragBoundary=\\\".program_edit_\\\"\\n          cdkDrag>\\n          <div class=\\\"lf_program programm-row g-flex__item\\\">\\n            <div class=\\\"preview_prog\\\">\\n              <div\\n                class=\\\"checkbox-wrapper\\\"\\n                (click)=\\\"changeSelectedSounds(sound, $event)\\\">\\n              </div>\\n\\n              <p class=\\\"checkbox_in_prog\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  [id]=\\\"'playlistSound-' + i\\\"\\n                  [checked]=\\\"selectedSounds.indexOf(sound) !== -1\\\">\\n                <label [for]=\\\"'playlistSound-' + i\\\"></label>\\n              </p>\\n            </div>\\n\\n            <div\\n              class=\\\"sound-label\\\"\\n              (click)=\\\"changeSelectedSounds(sound, $event)\\\">\\n              {{ i + countOfMixesSounds + 1 }}. {{ sound.name }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"rf_program g-flex__item-fixed g-flex g-flex--align-center\\\">\\n            <p>{{ sound.duration }}</p>\\n\\n            <img\\n              src=\\\"../../assets/img/bin.png\\\"\\n              alt=\\\"bin\\\"\\n              class=\\\"bin_button\\\"\\n              (click)=\\\"removeSound(sound)\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \"<ion-content>\\n  <form\\n    class=\\\"player-form g-flex-column\\\"\\n    [formGroup]=\\\"playerFormGroup\\\">\\n    <div class=\\\"wrap_of_top_player g-flex-column__item-fixed\\\">\\n      <div class=\\\"head_of_player\\\">\\n        <div class=\\\"head_logo\\\">\\n          <a>\\n            <img src=\\\"assets/img/bluelogo.png\\\" alt=\\\"bluelogo\\\">\\n          </a>\\n        </div>\\n\\n        <div class=\\\"search_with_settings\\\">\\n          <div class=\\\"search_player\\\">\\n            <div class=\\\"selected-sounds g-flex g-flex--align-center\\\">\\n              <span class=\\\"selected-sounds__label\\\">{{ currentSound }}</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"filter_player\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"custom-duration\\\"\\n              maxlength=\\\"3\\\"\\n              [class.invalid]=\\\"playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).invalid\\\"\\n              [formControlName]=\\\"CONTROLS_NAME.CUSTOM_TIME\\\">\\n\\n            <a [class]=\\\"color + '_back'\\\">\\n              <ion-icon name=\\\"settings\\\"></ion-icon>\\n            </a>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"player_buttons\\\">\\n          <div class=\\\"controls_player\\\">\\n            <i class=\\\"fa fa-arrows\\\" aria-hidden=\\\"true\\\"></i>\\n\\n            <button\\n              class=\\\"btn-player\\\"\\n              [disabled]=\\\"isSwitchButtonsDisabled\\\"\\n              (click)=\\\"autoPlay(0)\\\">\\n              <img\\n                src=\\\"assets/img/prevbutton.png\\\"\\n                alt=\\\"prevbutton\\\">\\n            </button>\\n\\n            <button\\n              *ngIf=\\\"!playerSoundService.isSomePlaying\\\"\\n              [disabled]=\\\"!selectedSounds.length\\\"\\n              class=\\\"btn-player\\\"\\n              (click)=\\\"playSelectedSounds()\\\">\\n              <img\\n                src=\\\"assets/img/playbutton.png\\\"\\n                alt=\\\"playbutton\\\">\\n            </button>\\n\\n            <button\\n              *ngIf=\\\"playerSoundService.isSomePlaying\\\"\\n              [disabled]=\\\"!selectedSounds.length\\\"\\n              class=\\\"btn-player\\\"\\n              (click)=\\\"pauseSelectedSounds()\\\">\\n              <img\\n                src=\\\"assets/img/pause-button.png\\\"\\n                alt=\\\"playbutton\\\">\\n            </button>\\n\\n            <button\\n              class=\\\"btn-player\\\"\\n              [disabled]=\\\"isSwitchButtonsDisabled\\\"\\n              (click)=\\\"autoPlay(1)\\\">\\n              <img\\n                src=\\\"assets/img/nextbutton.png\\\"\\n                alt=\\\"nextbutton\\\">\\n            </button>\\n          </div>\\n\\n          <div class=\\\"duration_block {{ color }}\\\">\\n            <ion-range\\n              [formControlName]=\\\"CONTROLS_NAME.RANGE\\\"\\n              (touchstart)=\\\"onTouchStartRange()\\\"\\n              (touchend)=\\\"onTouchEndRange()\\\"\\n              (ionChange)=\\\"onChangeRange($event)\\\"\\n              min=\\\"0\\\"\\n              max=\\\"100\\\"\\n              step=\\\"1\\\">\\n            </ion-range>\\n          </div>\\n\\n          <div class=\\\"timing_block\\\">\\n            <p class=\\\"timer\\\">\\n              {{ countDown | async | formatTime }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"wrap_of_bottom_player player__fourth player-container g-flex-column__item\\\">\\n      <ng-container *ngIf=\\\"isPlaylistOpened; else categoriesTpl\\\">\\n        <playlist\\n          class=\\\"playlist\\\"\\n          [draggedFilteredSounds]=\\\"draggedFilteredSounds\\\"\\n          [user]=\\\"user\\\"\\n          [customDuration]=\\\"customDuration\\\"\\n          [copiedSounds]=\\\"copiedSounds\\\"\\n          (copyPlaylistSound)=\\\"onCopyPlaylistSound($event)\\\"\\n          (resetSound)=\\\"resetSounds()\\\"\\n          (selectSound)=\\\"onPlaylistSoundChange($event)\\\">\\n        </playlist>\\n      </ng-container>\\n\\n      <ng-template #categoriesTpl>\\n        <!-- Categories -->\\n        <div class=\\\"category_player {{ color }}_categor g-flex-column\\\">\\n          <div class=\\\"edit_of_ g-flex-column__item-fixed\\\">\\n            <div class=\\\"lf_edit\\\">\\n              <textarea\\n                #categoryTextarea\\n                [formControlName]=\\\"CONTROLS_NAME.CATEGORY\\\"\\n                cols=\\\"30\\\"\\n                rows=\\\"10\\\">\\n              </textarea>\\n            </div>\\n            <div class=\\\"rg_edit g-flex-column\\\">\\n              <button\\n                class=\\\"create_btn g-flex g-flex--align-center g-flex--justify-center\\\"\\n                [disabled]=\\\"!categoryTextarea.value.trim()\\\"\\n                (click)=\\\"onAddCategory()\\\">\\n                {{ 'create' | translate }}\\n              </button>\\n\\n              <button\\n                class=\\\"edit_me_ g-flex g-flex--align-center g-flex--justify-center\\\"\\n                [disabled]=\\\"!selectedCategoryId || isOfficialCategorySelected\\\"\\n                (click)=\\\"onEditCategory()\\\">\\n                {{ 'edit' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"edit_of_content g-flex-column__item g-flex-column\\\">\\n            <div class=\\\"head_of_edit_ g-flex-column__item-fixed\\\">\\n              <h2>{{ 'category' | translate }}</h2>\\n\\n              <button\\n                class=\\\"delete_elems\\\"\\n                [disabled]=\\\"!selectedCategoryId || isOfficialCategorySelected\\\"\\n                (click)=\\\"onDeleteCategory()\\\">\\n                {{ 'delete' | translate }}\\n              </button>\\n            </div>\\n\\n            <div class=\\\"g-flex-column__item g-flex-column g-scroll-y\\\">\\n              <div\\n                class=\\\"cont_of_edit_ count_elems categories\\\"\\n                [ngClass]=\\\"color + '_edit'\\\">\\n                <div\\n                  *ngFor=\\\"let categoryId of officialCategoriesId\\\"\\n                  [id]=\\\"categoryId\\\"\\n                  [class]=\\\"'dragged-element ' + color\\\"\\n                  (click)=\\\"filterCourses(categoryId)\\\">\\n                  <div\\n                    *ngFor=\\\"let cat of categories | category: categoryId\\\"\\n                    class=\\\"elem_of_cont_edit {{ color }}\\\"\\n                    [class.active_elem_]=\\\"cat.id == selectedCategoryId\\\">\\n                    <p>\\n                      {{ cat.name }}\\n                    </p>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div\\n                class=\\\"cont_of_edit_ count_elems user-categories\\\"\\n                cdkDropList\\n                (cdkDropListDropped)=\\\"dropCategory($event)\\\"\\n                [ngClass]=\\\"color + '_edit'\\\">\\n                <div\\n                  *ngFor=\\\"let categoryId of userOwnCategoriesId\\\"\\n                  cdkDrag\\n                  [id]=\\\"categoryId\\\"\\n                  [class]=\\\"'dragged-element ' + color\\\"\\n                  (click)=\\\"filterCourses(categoryId)\\\">\\n                  <div\\n                    *ngFor=\\\"let cat of categories | category: categoryId\\\"\\n                    class=\\\"elem_of_cont_edit {{ color }} by-user\\\"\\n                    [class.active_elem_]=\\\"cat.id == selectedCategoryId\\\">\\n                    <p>\\n                      {{ cat.name }}\\n                    </p>\\n\\n                    <img class=\\\"moved-img\\\" src=\\\"../../assets/category.svg\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- Courses -->\\n        <div class=\\\"category_player {{ color }}_categor g-flex-column\\\">\\n          <div class=\\\"edit_of_ g-flex-column__item-fixed\\\">\\n            <div class=\\\"lf_edit\\\">\\n              <textarea\\n                #courseTextarea\\n                [formControlName]=\\\"CONTROLS_NAME.COURSE\\\"\\n                cols=\\\"30\\\"\\n                rows=\\\"10\\\">\\n              </textarea>\\n            </div>\\n            <div class=\\\"rg_edit g-flex-column\\\">\\n              <button\\n                class=\\\"create_btn g-flex g-flex--align-center g-flex--justify-center\\\"\\n                [disabled]=\\\"isDisableCourseCreate\\\"\\n                (click)=\\\"onAddCourse()\\\">\\n                {{ 'create' | translate }}\\n              </button>\\n\\n              <button\\n                class=\\\"edit_me_ g-flex g-flex--align-center g-flex--justify-center\\\"\\n                [disabled]=\\\"!selectedCourse || isOfficialCourseSelected\\\"\\n                (click)=\\\"onEditCourse()\\\">\\n                {{ 'edit' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"edit_of_content count_elems g-flex-column__item g-flex-column\\\">\\n            <div class=\\\"head_of_edit_ g-flex-column__item-fixed\\\">\\n              <h2>{{ 'course' | translate }}</h2>\\n\\n              <button\\n                class=\\\"delete_elems\\\"\\n                [disabled]=\\\"!selectedCourse || isOfficialCourseSelected\\\"\\n                (click)=\\\"onDeleteCourse()\\\">\\n                {{ 'delete' | translate }}\\n              </button>\\n            </div>\\n\\n            <div class=\\\"g-flex-column__item g-flex-column g-scroll-y\\\">\\n              <div\\n                *ngIf=\\\"userOwnCategoryCourses.length\\\"\\n                class=\\\"cont_of_edit_ {{ color }}_edit courses\\\"\\n                cdkDropList\\n                (cdkDropListDropped)=\\\"dropCourse($event)\\\">\\n                <ng-container *ngFor=\\\"let course of userOwnCategoryCourses\\\">\\n                  <div\\n                    cdkDrag\\n                    class=\\\"dragged-element elem_of_cont_edit course by-user\\\"\\n                    (click)=\\\"setCourse(course)\\\"\\n                    [class.active_elem_]=\\\"course.id == selectedCourse && selectedCourse\\\">\\n                    <p>{{ course.name }}</p>\\n\\n                    <img class=\\\"moved-img\\\" src=\\\"../../assets/category.svg\\\">\\n                  </div>\\n                </ng-container>\\n              </div>\\n\\n              <div\\n                *ngIf=\\\"officialCategoryCourses.length\\\"\\n                class=\\\"cont_of_edit_ {{ color }}_edit courses\\\">\\n                <ng-container *ngFor=\\\"let course of officialCategoryCourses\\\">\\n                  <div\\n                    class=\\\"elem_of_cont_edit course\\\"\\n                    (click)=\\\"setCourse(course)\\\"\\n                    [class.active_elem_]=\\\"course.id == selectedCourse && selectedCourse\\\">\\n                    <p>{{ course.name }}</p>\\n                  </div>\\n                </ng-container>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-template>\\n\\n      <!-- Program -->\\n      <ng-container *ngIf=\\\"!isPlaylistOpened\\\">\\n        <div class=\\\"category_player longer_program g-flex-column\\\">\\n          <div class=\\\"create_of_ g-flex-column__item-fixed\\\">\\n            <button\\n              class=\\\"hovered_btns {{ color }}_button\\\"\\n              [class.has-copied]=\\\"copiedSounds.length || copiedMixes.length\\\"\\n              [disabled]=\\\"!selectedCourse\\\"\\n              (click)=\\\"copySounds()\\\">\\n              {{ 'pCopy' | translate }}\\n            </button>\\n\\n            <button\\n              class=\\\"hovered_btns\\\"\\n              [disabled]=\\\"!selectedCourse || isOfficialCourseSelected || (!copiedSounds.length && !copiedMixes.length)\\\"\\n              (click)=\\\"pasteSounds()\\\">\\n              {{ 'pPaste' | translate }}\\n            </button>\\n          </div>\\n\\n          <div class=\\\"edit_of_content g-flex-column__item g-flex-column\\\">\\n            <div class=\\\"head_of_edit_ head_of_programm_sort g-flex-column__item-fixed\\\">\\n              <h2>{{ 'program' | translate }}</h2>\\n              <a>{{ 'edit' | translate }}</a>\\n            </div>\\n\\n            <div\\n              cdkDropList\\n              #draggedSoundListElm=\\\"cdkDropList\\\"\\n              [cdkDropListData]=\\\"soundList\\\"\\n              [cdkDropListConnectedTo]=\\\"[draggedFilteredSounds]\\\"\\n              (cdkDropListDropped)=\\\"dropSound($event)\\\"\\n              class=\\\"program_edit_ count_elems cont_of_edit_ g-flex-column__item\\\">\\n              <div\\n                *ngFor=\\\"let sound of soundList; let i = index\\\"\\n                class=\\\"elem_program\\\"\\n                cdkDragBoundary=\\\".program_edit_\\\"\\n                cdkDrag>\\n                <div class=\\\"lf_program programm-row g-flex__item\\\">\\n                  <div class=\\\"preview_prog\\\">\\n                    <div\\n                      class=\\\"checkbox-wrapper\\\"\\n                      (click)=\\\"changeSelectedSounds(sound, $event)\\\">\\n                    </div>\\n\\n                    <p class=\\\"checkbox_in_prog\\\">\\n                      <input\\n                        type=\\\"checkbox\\\"\\n                        [id]=\\\"'courseSound-' + i\\\"\\n                        [checked]=\\\"selectedSounds.indexOf(sound) !== -1\\\">\\n                      <label [for]=\\\"'courseSound-' + i\\\"></label>\\n                    </p>\\n                  </div>\\n\\n                  <div\\n                    class=\\\"sound-label\\\"\\n                    (click)=\\\"changeSelectedSounds(sound, $event)\\\">\\n                    {{ i + 1 }}. {{ sound.name }}\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"rf_program g-flex__item-fixed\\\">\\n                  <p>{{ sound.duration }}</p>\\n\\n                  <img\\n                    *ngIf=\\\"!isOfficialCourseSelected\\\"\\n                    src=\\\"../../assets/img/bin.png\\\"\\n                    alt=\\\"bin\\\"\\n                    class=\\\"bin_button\\\"\\n                    (click)=\\\"removeSound(sound)\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-container>\\n\\n      <!-- Sounds list -->\\n      <div class=\\\"category_player longer_program generation_block g-flex-column\\\">\\n        <div class=\\\"generation_buttons {{ color }}_button g-flex-column__item-fixed\\\">\\n          <!--<a (click)=\\\"openMenu()\\\" class=\\\"active_generation\\\">My Page</a>-->\\n          <a [routerLink]=\\\"'/' + APP_ROUTE_URLS.INFO\\\" class=\\\"active_generation\\\">{{ \\\"home\\\" | translate }}</a>\\n          <a class=\\\"hovered_btns\\\" (click)=\\\"changeLanguage()\\\">{{ \\\"cLang\\\" | translate }}</a>\\n        </div>\\n\\n        <div class=\\\"generation_content count_elems g-flex-column__item g-flex-column\\\">\\n          <div class=\\\"scrolltobot g-flex-column__item-fixed\\\">\\n            <img src=\\\"assets/img/scrollBot.png\\\" alt=\\\"scrollBot\\\">\\n          </div>\\n\\n          <div class=\\\"head_generation g-flex-column__item g-flex-column\\\">\\n            <h2 class=\\\"g-flex-column__item-fixed\\\">\\n              {{ \\\"tList\\\" | translate }}\\n            </h2>\\n\\n            <div class=\\\"inner_head_generation {{ color }}_generation g-flex-column__item-fixed\\\">\\n              <ion-input type=\\\"text\\\" (ionInput)=\\\"getItems($event)\\\" placeholder=\\\"Поиск\\\"></ion-input>\\n            </div>\\n\\n            <div\\n              cdkDropList\\n              #draggedFilteredSoundsElm=\\\"cdkDropList\\\"\\n              [cdkDropListData]=\\\"filteredSounds\\\"\\n              class=\\\"generation_wrap cont_of_edit_ top-list g-flex-column g-scroll-y\\\">\\n              <div\\n                *ngFor=\\\"let sound of filteredSounds; let i = index\\\"\\n                cdkDrag\\n                class=\\\"generation_elem\\\">\\n                <p>{{ i + 1 }}. {{ sound.name }}</p>\\n                <p>{{ sound.duration }}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"bottom_delete courses_bottom\\\">\\n      <h2>{{ 'delCourse' | translate }}</h2>\\n      <div class=\\\"bottom_buttons\\\">\\n        <a class=\\\"delete_button_courses\\\">{{ 'delete' | translate }}</a>\\n        <a class=\\\"ok_button_courses\\\">OK</a>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"bottom_delete program_bottom\\\">\\n      <h2>{{ 'delProg' | translate }}</h2>\\n      <div class=\\\"bottom_buttons\\\">\\n        <a class=\\\"delete_button_program\\\">{{ 'delete' | translate }}</a>\\n        <a class=\\\"ok_button_program\\\">OK</a>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"switcher_of_page {{color}}\\\">\\n      <a (click)=\\\"switchPlaylist()\\\">{{ (isPlaylistOpened ? 'category' : 'playlist') | translate }} </a>\\n    </div>\\n  </form>\\n</ion-content>\\n\"","export default \"<div class=\\\"header_long change-lang\\\">\\n  <div>\\n    {{ \\\"cLang\\\" | translate }}\\n  </div>\\n\\n  <select (change)=\\\"changeLang($event.target.value)\\\">\\n    <option\\n      *ngFor=\\\"let language of APP_LANGUAGES\\\"\\n      [value]=\\\"language.code\\\"\\n      [selected]=\\\"language.code === selectedLang\\\">\\n      {{ language.label }}\\n    </option>\\n  </select>\\n</div>\\n\"","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","export default \".playlist-container {\\n  width: 75%;\\n}\\n\\n.category_player {\\n  width: 37%;\\n  margin-left: 2%;\\n}\\n\\n.hovered_btns,\\n.edit_me_,\\n.create_btn,\\n.delete_elems {\\n  background: none;\\n}\\n\\n.hovered_btns:focus,\\n.edit_me_:focus,\\n.create_btn:focus,\\n.delete_elems:focus {\\n  outline: none;\\n}\\n\\n.hovered_btns:disabled,\\n.edit_me_:disabled,\\n.create_btn:disabled,\\n.delete_elems:disabled {\\n  opacity: 0.4;\\n}\\n\\n.hovered_btns:active,\\n.edit_me_:active,\\n.create_btn:active,\\n.delete_elems:active {\\n  background-color: #0E1FC0;\\n  color: #fff;\\n  transition: 0.2s ease all;\\n}\\n\\n.hovered_btns_left,\\n.hovered_btns_right {\\n  width: 100%;\\n}\\n\\n.hovered_btns_left {\\n  margin-right: 5px;\\n}\\n\\n.hovered_btns_right {\\n  margin-left: 5px;\\n}\\n\\n.hovered_btns {\\n  width: 100%;\\n  height: 27.5px;\\n  white-space: nowrap;\\n}\\n\\n.delete_elems {\\n  font-size: 20px;\\n}\\n\\n.edit_me_,\\n.create_btn {\\n  flex: auto;\\n  padding: 3px;\\n  border-radius: 5px;\\n  border: 1px solid #D1D1D3;\\n}\\n\\n.edit_me_ {\\n  margin-top: 5px;\\n}\\n\\n.playlist-items {\\n  margin-top: 10px;\\n}\\n\\n.checkbox-wrapper {\\n  background: transparent;\\n  width: 50px;\\n  height: 30px;\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n.dragged-element {\\n  margin-bottom: 10px;\\n}\\n\\n.dragged-element .moved-img {\\n  display: none;\\n}\\n\\n.dragged-element.moved .moved-img {\\n  display: block;\\n}\\n\\n.dragged-element:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.mix-btn {\\n  margin-top: 5px;\\n}\\n\\n.cont_of_edit_ {\\n  overflow-y: visible;\\n}\\n\\n.cont_of_edit_.sounds, .cont_of_edit_.mix {\\n  margin-top: 0;\\n}\\n\\n.sound-label__mix {\\n  padding: 6px 0;\\n}\\n\\n.rf_program {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.rf_program img {\\n  display: flex !important;\\n  height: 16px;\\n  width: 16px;\\n  margin-left: 10px;\\n  padding: 0;\\n}\\n\\n.elem_program .lf_program p {\\n  margin-right: 0;\\n}\\n\\n.head_of_edit_ {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxheWVyL2NvbXBvbmVudHMvcGxheWxpc3QvRDpcXEJhY2t1cFxcRGV2ZWxvcG1lbnRcXFdvcmtfSm9ic1xcRnJlZWxhbmNpbmdcXE91dFxcQW5ndWxhcl9zb3VuZFxcQXJjaGl2ZS9zcmNcXGFwcFxccGxheWVyXFxjb21wb25lbnRzXFxwbGF5bGlzdFxccGxheWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BsYXllci9jb21wb25lbnRzL3BsYXlsaXN0L3BsYXlsaXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQ0NGOztBREVBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUNDRjs7QURFQTs7OztFQUlFLGdCQUFBO0FDQ0Y7O0FEQ0U7Ozs7RUFDRSxhQUFBO0FDSUo7O0FEREU7Ozs7RUFDRSxZQUFBO0FDTUo7O0FESEU7Ozs7RUFDRSx5QkFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtBQ1FKOztBREpBOztFQUVFLFdBQUE7QUNPRjs7QURKQTtFQUNFLGlCQUFBO0FDT0Y7O0FESkE7RUFDRSxnQkFBQTtBQ09GOztBREpBO0VBQ0UsV0FBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQ09GOztBREpBO0VBQ0UsZUFBQTtBQ09GOztBREpBOztFQUVFLFVBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQ09GOztBREpBO0VBQ0UsZUFBQTtBQ09GOztBREpBO0VBQ0UsZ0JBQUE7QUNPRjs7QURKQTtFQUNFLHVCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUNPRjs7QURKQTtFQUNFLG1CQUFBO0FDT0Y7O0FETEU7RUFDRSxhQUFBO0FDT0o7O0FESEk7RUFDRSxjQUFBO0FDS047O0FEREU7RUFDRSxnQkFBQTtBQ0dKOztBRENBO0VBQ0UsZUFBQTtBQ0VGOztBRENBO0VBQ0UsbUJBQUE7QUNFRjs7QURBRTtFQUVFLGFBQUE7QUNDSjs7QURJRTtFQUNFLGNBQUE7QUNESjs7QURLQTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtBQ0ZGOztBRElFO0VBQ0Usd0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsVUFBQTtBQ0ZKOztBRE1BO0VBQ0UsZUFBQTtBQ0hGOztBRE1BO0VBQ0UsZ0JBQUE7QUNIRiIsImZpbGUiOiJzcmMvYXBwL3BsYXllci9jb21wb25lbnRzL3BsYXlsaXN0L3BsYXlsaXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBsYXlsaXN0LWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDc1JTtcclxufVxyXG5cclxuLmNhdGVnb3J5X3BsYXllciB7XHJcbiAgd2lkdGg6IDM3JTtcclxuICBtYXJnaW4tbGVmdDogMiU7XHJcbn1cclxuXHJcbi5ob3ZlcmVkX2J0bnMsXHJcbi5lZGl0X21lXyxcclxuLmNyZWF0ZV9idG4sXHJcbi5kZWxldGVfZWxlbXMge1xyXG4gIGJhY2tncm91bmQ6IG5vbmU7XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICB9XHJcblxyXG4gICY6ZGlzYWJsZWQge1xyXG4gICAgb3BhY2l0eTogMC40O1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUZDMDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogMC4ycyBlYXNlIGFsbDtcclxuICB9XHJcbn1cclxuXHJcbi5ob3ZlcmVkX2J0bnNfbGVmdCxcclxuLmhvdmVyZWRfYnRuc19yaWdodCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5ob3ZlcmVkX2J0bnNfbGVmdCB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XHJcbn1cclxuXHJcbi5ob3ZlcmVkX2J0bnNfcmlnaHQge1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbn1cclxuXHJcbi5ob3ZlcmVkX2J0bnMge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMjcuNXB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxuXHJcbi5kZWxldGVfZWxlbXMge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLmVkaXRfbWVfLFxyXG4uY3JlYXRlX2J0biB7XHJcbiAgZmxleDogYXV0bztcclxuICBwYWRkaW5nOiAzcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNEMUQxRDM7XHJcbn1cclxuXHJcbi5lZGl0X21lXyB7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4ucGxheWxpc3QtaXRlbXMge1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5jaGVja2JveC13cmFwcGVyIHtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB3aWR0aDogNTBweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IDEwO1xyXG59XHJcblxyXG4uZHJhZ2dlZC1lbGVtZW50IHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAubW92ZWQtaW1nIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAmLm1vdmVkIHtcclxuICAgIC5tb3ZlZC1pbWcge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gICY6bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLm1peC1idG4ge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmNvbnRfb2ZfZWRpdF8ge1xyXG4gIG92ZXJmbG93LXk6IHZpc2libGU7XHJcblxyXG4gICYuc291bmRzLFxyXG4gICYubWl4IHtcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4uc291bmQtbGFiZWwge1xyXG4gICZfX21peCB7XHJcbiAgICBwYWRkaW5nOiA2cHggMDtcclxuICB9XHJcbn1cclxuXHJcbi5yZl9wcm9ncmFtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gIGltZyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICB3aWR0aDogMTZweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbn1cclxuXHJcbi5lbGVtX3Byb2dyYW0gLmxmX3Byb2dyYW0gcCB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4uaGVhZF9vZl9lZGl0XyB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG4iLCIucGxheWxpc3QtY29udGFpbmVyIHtcbiAgd2lkdGg6IDc1JTtcbn1cblxuLmNhdGVnb3J5X3BsYXllciB7XG4gIHdpZHRoOiAzNyU7XG4gIG1hcmdpbi1sZWZ0OiAyJTtcbn1cblxuLmhvdmVyZWRfYnRucyxcbi5lZGl0X21lXyxcbi5jcmVhdGVfYnRuLFxuLmRlbGV0ZV9lbGVtcyB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uaG92ZXJlZF9idG5zOmZvY3VzLFxuLmVkaXRfbWVfOmZvY3VzLFxuLmNyZWF0ZV9idG46Zm9jdXMsXG4uZGVsZXRlX2VsZW1zOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5ob3ZlcmVkX2J0bnM6ZGlzYWJsZWQsXG4uZWRpdF9tZV86ZGlzYWJsZWQsXG4uY3JlYXRlX2J0bjpkaXNhYmxlZCxcbi5kZWxldGVfZWxlbXM6ZGlzYWJsZWQge1xuICBvcGFjaXR5OiAwLjQ7XG59XG4uaG92ZXJlZF9idG5zOmFjdGl2ZSxcbi5lZGl0X21lXzphY3RpdmUsXG4uY3JlYXRlX2J0bjphY3RpdmUsXG4uZGVsZXRlX2VsZW1zOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwRTFGQzA7XG4gIGNvbG9yOiAjZmZmO1xuICB0cmFuc2l0aW9uOiAwLjJzIGVhc2UgYWxsO1xufVxuXG4uaG92ZXJlZF9idG5zX2xlZnQsXG4uaG92ZXJlZF9idG5zX3JpZ2h0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5ob3ZlcmVkX2J0bnNfbGVmdCB7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG4uaG92ZXJlZF9idG5zX3JpZ2h0IHtcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cblxuLmhvdmVyZWRfYnRucyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDI3LjVweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLmRlbGV0ZV9lbGVtcyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmVkaXRfbWVfLFxuLmNyZWF0ZV9idG4ge1xuICBmbGV4OiBhdXRvO1xuICBwYWRkaW5nOiAzcHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0QxRDFEMztcbn1cblxuLmVkaXRfbWVfIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4ucGxheWxpc3QtaXRlbXMge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4uY2hlY2tib3gtd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4uZHJhZ2dlZC1lbGVtZW50IHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi5kcmFnZ2VkLWVsZW1lbnQgLm1vdmVkLWltZyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZHJhZ2dlZC1lbGVtZW50Lm1vdmVkIC5tb3ZlZC1pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5kcmFnZ2VkLWVsZW1lbnQ6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5taXgtYnRuIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4uY29udF9vZl9lZGl0XyB7XG4gIG92ZXJmbG93LXk6IHZpc2libGU7XG59XG4uY29udF9vZl9lZGl0Xy5zb3VuZHMsIC5jb250X29mX2VkaXRfLm1peCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5zb3VuZC1sYWJlbF9fbWl4IHtcbiAgcGFkZGluZzogNnB4IDA7XG59XG5cbi5yZl9wcm9ncmFtIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbi5yZl9wcm9ncmFtIGltZyB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5lbGVtX3Byb2dyYW0gLmxmX3Byb2dyYW0gcCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLmhlYWRfb2ZfZWRpdF8ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufSJdfQ== */\"","import { CdkDragDrop, CdkDropList, copyArrayItem, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { TranslateService } from '@ngx-translate/core';\nimport { forkJoin, Subject, throwError } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport * as uuid from 'uuid';\n\nimport { COUPON_STATUSES } from '../../../shared/constants/coupons.constant';\nimport { ITranslations } from '../../../shared/interfaces/translations.interface';\nimport { UserModel } from '../../../shared/models/user.model';\nimport { MixModel, PlaylistModel } from '../../model/playlist.model';\nimport { SoundModel } from '../../model/sound.model';\nimport { PlayerSoundService } from '../../services/play-sound.service';\nimport { PlayerApiService } from '../../services/player.api.service';\n\nenum CONTROLS_NAME {\n  PLAYLIST = 'playlist',\n}\n\nexport interface IPlaylistEvent {\n  selectedSounds: SoundModel[];\n  soundList: SoundModel[];\n}\n\n@Component({\n  selector: 'playlist',\n  templateUrl: './playlist.component.html',\n  styleUrls: ['./playlist.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'g-flex',\n  },\n})\nexport class PlaylistComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() user: UserModel;\n  @Input() customDuration: number;\n  @Input() draggedFilteredSounds: CdkDropList;\n  @Input() copiedSounds: SoundModel[] = [];\n\n  @Output() selectSound: EventEmitter<IPlaylistEvent> = new EventEmitter<IPlaylistEvent>();\n  @Output() resetSound: EventEmitter<void>            = new EventEmitter<void>();\n  @Output() copyPlaylistSound: EventEmitter<{ copiedSounds: SoundModel[], copiedMixes: MixModel[] }>\n                                                      = new EventEmitter();\n\n  @ViewChild('playlistTextarea', { static: false }) playlistTextarea: ElementRef<HTMLTextAreaElement>;\n  @ViewChild('playlistDraggedSoundListElm', { static: false }) playlistDraggedSoundList: CdkDropList;\n  @ViewChild('playlistDraggedMixesListElm', { static: false }) playlistDraggedMixesList: CdkDropList;\n\n  playlists: PlaylistModel[];\n  selectedItemSounds: SoundModel[];\n  selectedItemMixes: MixModel[];\n  color: string;\n  selectedItemId: number;\n  copiedMixes: MixModel[]      = [];\n  selectedSounds: SoundModel[] = [];\n  selectedMixes: MixModel[]    = [];\n  countOfMixesSounds: number   = 0;\n\n  playlistFormGroup: FormGroup = new FormGroup({\n    [CONTROLS_NAME.PLAYLIST]: new FormControl(),\n  });\n\n  CONTROLS_NAME: typeof CONTROLS_NAME = CONTROLS_NAME;\n\n  private _translations: ITranslations = {};\n\n  private readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor (\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _storage: Storage,\n    private _loadingController: LoadingController,\n    private _alertController: AlertController,\n    private _translateService: TranslateService,\n    private _playerApiService: PlayerApiService,\n    private _playerSoundService: PlayerSoundService,\n  ) {\n  }\n\n  async ngOnInit (): Promise<void> {\n    this.load('Загрузка');\n\n    this._translateService.get(['max5'])\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(values => {\n        this._translations = values;\n      });\n\n    await this.getColor();\n  }\n\n  async ngOnChanges ({ user, customDuration }: SimpleChanges): Promise<void> {\n    if (user && this.user) {\n      await this.getPlayLists();\n\n      this._loadingController.dismiss();\n    }\n\n    if (customDuration) {\n      this.selectedSounds.forEach(sound => {\n        sound.duration = this.customDuration;\n      });\n\n      this.selectedMixes.forEach(mix => {\n        mix.duration = this.customDuration;\n      });\n    }\n  }\n\n  ngOnDestroy (): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  dropItem (event: CdkDragDrop<any[]>): void {\n    moveItemInArray(this.playlists, event.previousIndex, event.currentIndex);\n  }\n\n  dropMix (event: CdkDragDrop<any[]>): void {\n    if (!this.selectedItemId) {\n      return;\n    }\n\n    this.resetSound.emit();\n\n    moveItemInArray(this.selectedItemMixes, event.previousIndex, event.currentIndex);\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  dropSound (event: CdkDragDrop<any[]>): void {\n    if (!this.selectedItemId) {\n      return;\n    }\n\n    this.resetSound.emit();\n\n    if (event.container !== event.previousContainer) {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n\n      this.selectedItemSounds = this._playerSoundService.updateSelectedSoundsUuid(\n        this.selectedItemSounds,\n        this.selectedSounds,\n      );\n\n      this.updateSounds();\n\n      return;\n    }\n\n    moveItemInArray(this.selectedItemSounds, event.previousIndex, event.currentIndex);\n\n    this.updateSounds();\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  selectItem (item: PlaylistModel): void {\n    this.selectedItemId     = item.id;\n    this.selectedItemSounds = item.sounds.map(it => (new SoundModel({ ...it, uuid: uuid.v4() })));\n    this.selectedItemMixes  = item.mixes.map(it => {\n      this.countOfMixesSounds = this.countOfMixesSounds + it.sounds.length;\n\n      return new MixModel({\n        ...it,\n        duration: it.sounds[0] ? it.sounds[0].duration : 0,\n        uuid: uuid.v4(),\n      });\n    });\n    this.selectedSounds     = [];\n\n    this.playlistFormGroup.get(CONTROLS_NAME.PLAYLIST).setValue(item.name, { emitEvent: false });\n\n    this.resetSound.emit();\n  }\n\n  onAddPlaylist (): void {\n    this.load('Загрузка');\n\n    this._playerApiService.addPlaylist({\n      user_id: this.user.uid,\n      name: this.playlistFormGroup.get(CONTROLS_NAME.PLAYLIST).value,\n      status: COUPON_STATUSES.ACTIVE,\n      trash: 0,\n    })\n      .subscribe(async () => {\n        await this.getPlayLists();\n\n        this.playlistFormGroup.get(CONTROLS_NAME.PLAYLIST).setValue(null, { emitEvent: false });\n\n        await this._loadingController.dismiss();\n      });\n  }\n\n  onEditPlaylist (id: number): void {\n    this.load('Загрузка');\n\n    this._playerApiService.renamePlaylist({\n      id,\n      name: this.playlistFormGroup.get(CONTROLS_NAME.PLAYLIST).value,\n    })\n      .subscribe(async () => {\n        await this.getPlayLists();\n\n        await this._loadingController.dismiss();\n      });\n  }\n\n  onDeletePlaylist (): void {\n    this._playerApiService.deletePlaylist({\n      id: this.selectedItemId,\n    })\n      .pipe(\n        catchError(({ error }) => {\n          console.error('error', error);\n\n          return throwError(error);\n        }),\n      )\n      .subscribe(async () => {\n        this.selectedSounds     = [];\n        this.selectedMixes      = [];\n        this.selectedItemMixes  = [];\n        this.selectedItemSounds = [];\n\n        await this.getPlayLists();\n\n        this.playlistFormGroup.get(CONTROLS_NAME.PLAYLIST).setValue(null, { emitEvent: false });\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  copySounds (): void {\n    this.copiedSounds = [];\n    this.copiedMixes  = [];\n\n    if (!this.selectedSounds.length && !this.selectedMixes.length) {\n      this.copiedSounds = [...this.copiedSounds, ...this.selectedItemSounds];\n      this.copiedMixes  = [...this.copiedMixes, ...this.selectedItemMixes];\n    }\n\n    if (!this.selectedSounds.length && this.selectedMixes.length) {\n      this.copiedMixes = [...this.copiedMixes, ...this.selectedMixes];\n    }\n\n    if (this.selectedSounds.length && !this.selectedMixes.length) {\n      this.copiedSounds = [...this.copiedSounds, ...this.selectedSounds];\n    }\n\n    if (this.selectedSounds.length && this.selectedMixes.length) {\n      this.copiedSounds = [...this.copiedSounds, ...this.selectedSounds];\n      this.copiedMixes  = [...this.copiedMixes, ...this.selectedMixes];\n    }\n\n    this.copyPlaylistSound.emit({ copiedSounds: this.copiedSounds, copiedMixes: this.copiedMixes });\n  }\n\n  pasteSounds (): void {\n    if (this.copiedSounds) {\n      this.selectedItemSounds = [...this.selectedItemSounds, ...this.copiedSounds]\n        .map(it => (new SoundModel({ ...it, uuid: uuid.v4() })));\n\n      this.updateSounds();\n    }\n\n    if (this.copiedMixes) {\n      this.selectedItemMixes = [...this.selectedItemMixes, ...this.copiedMixes]\n        .map(it => (new MixModel({ ...it, uuid: uuid.v4() })));\n\n      const requests = [];\n\n      this.copiedMixes.forEach(mix => {\n        requests.push(\n          this._playerApiService.addMix({\n            id: this.selectedItemId,\n            sounds_id: mix.sounds.map(it => it.id).join(','),\n          }),\n        );\n\n        forkJoin(requests)\n          .pipe(\n            catchError(({ error }) => {\n              console.error('error', error);\n\n              return throwError(error);\n            }),\n          )\n          .subscribe(async () => {\n            await this.finalizeMixOperation();\n          });\n      });\n    }\n\n    this.copiedSounds   = [];\n    this.selectedSounds = [];\n    this.copiedMixes    = [];\n    this.selectedMixes  = [];\n\n    this.copyPlaylistSound.emit({ copiedSounds: this.copiedSounds, copiedMixes: this.copiedMixes });\n\n  }\n\n  changeSelectedMixes (mix: MixModel, event: MouseEvent): void {\n    event.stopPropagation();\n\n    const foundMix = this.selectedMixes.find(it => it.uuid === mix.uuid);\n\n    if (!foundMix) {\n      if (this.selectedMixes.length >= 5) {\n        this.alert('', this._translations.max5);\n\n        return;\n      }\n\n      this.selectedMixes.push(mix);\n\n      this.emitSelectedSounds();\n\n      return;\n    }\n\n    this.selectedMixes = this.selectedMixes.filter(it => it.uuid !== mix.uuid);\n\n    this.emitSelectedSounds();\n  }\n\n  changeSelectedSounds (sound: SoundModel, event: MouseEvent): void {\n    event.stopPropagation();\n\n    const foundSound = this.selectedSounds.find(it => it.uuid === sound.uuid);\n\n    if (!foundSound) {\n      if (this.selectedSounds.length >= 5) {\n        this.alert('', this._translations.max5);\n\n        return;\n      }\n\n      this.selectedSounds.push(sound);\n\n      this.emitSelectedSounds();\n\n      return;\n    }\n\n    this.selectedSounds = this.selectedSounds.filter(it => it.uuid !== sound.uuid);\n\n    this.emitSelectedSounds();\n  }\n\n  saveMix (): void {\n    this.load('Загрузка');\n\n    let request;\n\n    if (this.selectedMixes.length && this.selectedSounds.length) {\n      request = this._playerApiService.addMixSounds({\n        id: this.selectedMixes[0].id,\n        sounds_id: this.selectedSounds.map(sound => sound.id).join(','),\n      });\n    } else {\n      request = this._playerApiService.addMix({\n        id: this.selectedItemId,\n        sounds_id: this.selectedSounds.map(sound => sound.id).join(','),\n      });\n    }\n\n    request\n      .pipe(\n        catchError(({ error }) => {\n          console.error('error', error);\n\n          return throwError(error);\n        }),\n      )\n      .subscribe(async () => {\n        await this.finalizeMixOperation();\n      });\n  }\n\n  resetMix (): void {\n    this.load('Загрузка');\n\n    const requests = this.selectedMixes.map(it => {\n      return this._playerApiService.resetMix({\n        id: it.id,\n      });\n    });\n\n    forkJoin(requests)\n      .pipe(\n        catchError(({ error }) => {\n          console.error('error', error);\n\n          return throwError(error);\n        }),\n      )\n      .subscribe(async () => {\n        await this.finalizeMixOperation();\n      });\n  }\n\n  private emitSelectedSounds (): void {\n    const mixesSounds = this.selectedMixes.map(mix => mix.sounds);\n\n    this.selectSound.emit({\n      selectedSounds: [\n        ...this._playerSoundService.getSoundsFromSelectedMixes(this.selectedMixes),\n        ...this.selectedSounds,\n      ],\n      soundList: this.selectedItemSounds,\n    });\n  }\n\n  private async finalizeMixOperation (): Promise<void> {\n    await this.getPlayLists();\n\n    const item = this.playlists.find(it => this.selectedItemId === it.id);\n    this.selectItem(item);\n\n    this.selectedMixes      = [];\n    this.selectedSounds     = [];\n    this.countOfMixesSounds = 0;\n\n    this._changeDetectorRef.detectChanges();\n\n    await this._loadingController.dismiss();\n  }\n\n  private async load (message: string): Promise<void> {\n    const loading = await this._loadingController.create({\n      message,\n      duration: 0,\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  private async alert (header: string, message: string): Promise<void> {\n    const alert = await this._alertController.create({\n      header,\n      message,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private getColor (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._storage.get('color')\n        .then(val => {\n          this.color = val;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private getPlayLists (): Promise<void> {\n    // return new Promise<void>(resolve => {\n    //   this._playerApiService.getPlayLists()\n    //     .subscribe(data => {\n    //       this.playlists = data.list.filter(it => it.user_id === this.user.uid);\n    //\n    //       resolve();\n    //\n    //       this._changeDetectorRef.detectChanges();\n    //     });\n    // });\n\n    return new Promise<void>(resolve => {\n      this._playerApiService.getUserPlayList(this.user.uid)\n        .subscribe(data => {\n          this.playlists = data.list;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private updateSounds (): void {\n    this._playerApiService.addPlayListSound({\n      id: this.selectedItemId,\n      sounds_id: this.selectedItemSounds.map(sound => sound.id).join(','),\n    })\n      .pipe(\n        catchError(({ error }) => {\n          console.error('error', error);\n\n          return throwError(error);\n        }),\n      )\n      .subscribe(async () => {\n        // await this.getCourses();\n        // await this.getSounds();\n        await this.getPlayLists();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n}\n","import * as uuid from 'uuid';\r\n\r\nimport { SoundModel } from './sound.model';\r\n\r\nexport class PlaylistDataModel {\r\n  list: PlaylistModel[];\r\n\r\n  constructor (data: Partial<PlaylistDataModel> = {}) {\r\n    Object.assign(this, data, {\r\n      list: data.list.map(it => new PlaylistModel(it)),\r\n    });\r\n  }\r\n}\r\n\r\nexport class MixModel {\r\n  id: number;\r\n  uuid: string;\r\n  playlist_id: number;\r\n  sounds: SoundModel[];\r\n  created_at: string;\r\n  updated_at: string;\r\n  duration?: number;\r\n\r\n  constructor (data: Partial<MixModel> = {}) {\r\n    Object.assign(this, data, {\r\n      sounds: data.sounds.filter(it => it)\r\n        .map(it => {\r\n          it.uuid = uuid.v4();\r\n\r\n          return new SoundModel(it);\r\n        }),\r\n    });\r\n  }\r\n}\r\n\r\nexport class PlaylistModel {\r\n  id: number;\r\n  name: string;\r\n  sounds: SoundModel[];\r\n  mixes: MixModel[];\r\n  status: string;\r\n  user_id: number;\r\n  created_at: string;\r\n  deleted_by: number;\r\n  trash: number;\r\n  updated_at: string;\r\n\r\n  constructor (data: Partial<PlaylistModel> = {}) {\r\n    Object.assign(this, data, {\r\n      sounds: data.sounds ? data.sounds.map(it => new SoundModel(it)) : [],\r\n      mixes: data.mixes ? data.mixes.map(it => new MixModel(it)) : [],\r\n    });\r\n  }\r\n}\r\n","export class SoundModel {\r\n  id: number;\r\n  name: string;\r\n  duration: number;\r\n  hz1: number;\r\n  hz2: number;\r\n  hz3: number;\r\n  hz4: number;\r\n  hz5: number;\r\n  uuid?: string;\r\n  deleted_by?: number;\r\n  status?: string;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  courses?: any[];\r\n\r\n  constructor (data: Partial<SoundModel> = {}) {\r\n    Object.assign(this, data, {\r\n      hz1: Number(data.hz1),\r\n      hz2: Number(data.hz2),\r\n      hz3: Number(data.hz3),\r\n      hz4: Number(data.hz4),\r\n      hz5: Number(data.hz5),\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'category',\r\n  pure: true,\r\n})\r\nexport class CategoryPipe implements PipeTransform {\r\n  transform (items: any[], categoryId: string): any {\r\n    if (!items || !categoryId) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter(item => String(item.id) === categoryId);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'order', pure: false })\r\nexport class OrderBy implements PipeTransform {\r\n  transform (input: any, [config = '+']): any {\r\n    if (!Array.isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (!Array.isArray(config) || (Array.isArray(config) && config.length === 1)) {\r\n      const propertyToCheck: string = !Array.isArray(config) ? config : config[0];\r\n      const desc                    = propertyToCheck.substr(0, 1) === '-';\r\n\r\n      // Basic array\r\n      if (!propertyToCheck || propertyToCheck === '-' || propertyToCheck === '+') {\r\n        return !desc ? input.sort() : input.sort().reverse();\r\n      }\r\n\r\n      const property: string = propertyToCheck.substr(0, 1) === '+' || propertyToCheck.substr(0, 1) === '-'\r\n        ? propertyToCheck.substr(1)\r\n        : propertyToCheck;\r\n\r\n      return input.sort((a: any, b: any) => {\r\n        return !desc\r\n          ? OrderBy._orderByComparator(a[property], b[property])\r\n          : -OrderBy._orderByComparator(a[property], b[property]);\r\n      });\r\n\r\n    }\r\n\r\n    // Loop over property of the array in order and sort\r\n    return input.sort((a: any, b: any) => {\r\n      for (const c of config) {\r\n        const desc     = c.substr(0, 1) === '-';\r\n        const property = c.substr(0, 1) === '+' || c.substr(0, 1) === '-'\r\n          ? c.substr(1)\r\n          : c;\r\n\r\n        const comparison = !desc\r\n          ? OrderBy._orderByComparator(a[property], b[property])\r\n          : -OrderBy._orderByComparator(a[property], b[property]);\r\n\r\n        if (comparison !== 0) {\r\n          return comparison;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  static _orderByComparator (a: any, b: any): number {\r\n    if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))) {\r\n      if (a < b) {\r\n        return -1;\r\n      }\r\n\r\n      if (a > b) {\r\n        return 1;\r\n      }\r\n    } else {\r\n      // Parse strings as numbers to compare properly\r\n      if (parseFloat(a) < parseFloat(b)) {\r\n        return -1;\r\n      }\r\n\r\n      if (parseFloat(a) > parseFloat(b)) {\r\n        return 1;\r\n      }\r\n    }\r\n\r\n    return 0; // equal each other\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatTime',\r\n})\r\nexport class FormatTimePipe implements PipeTransform {\r\n  transform (value: number): string {\r\n    const minutes: number = Math.floor(value / 60);\r\n\r\n    return ('00' + minutes).slice(-2) + ':' + ('00' + Math.floor(value - minutes * 60)).slice(-2);\r\n  }\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LanguageModalComponent } from '../shared/components/language-modal/language-modal.component';\n\nimport { PlaylistComponent } from './components/playlist/playlist.component';\nimport { CategoryPipe } from './pipes/category.pipe';\nimport { OrderBy } from './pipes/order-by.pipe';\nimport { FormatTimePipe } from './pipes/time-format.pipe';\nimport { PlayerPage } from './player.page';\nimport { PlayerSoundService } from './services/play-sound.service';\nimport { PlayerApiService } from './services/player.api.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlayerPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    TranslateModule,\n    RouterModule.forChild(routes),\n    DragDropModule,\n  ],\n  declarations: [\n    PlayerPage,\n    FormatTimePipe,\n    OrderBy,\n    CategoryPipe,\n    LanguageModalComponent,\n    PlaylistComponent,\n  ],\n  entryComponents: [\n    LanguageModalComponent,\n    PlaylistComponent,\n  ],\n  providers: [\n    PlayerApiService,\n    PlayerSoundService,\n  ],\n})\nexport class PlayerPageModule {\n}\n","export default \".player-form {\\n  height: 100%;\\n  overflow: hidden;\\n}\\n\\n.wrap_of_bottom_player {\\n  margin-bottom: 70px;\\n}\\n\\n.hovered_btns,\\n.edit_me_,\\n.create_btn,\\n.delete_elems {\\n  background: none;\\n}\\n\\n.hovered_btns:focus,\\n.edit_me_:focus,\\n.create_btn:focus,\\n.delete_elems:focus {\\n  outline: none;\\n}\\n\\n.hovered_btns:disabled,\\n.edit_me_:disabled,\\n.create_btn:disabled,\\n.delete_elems:disabled {\\n  opacity: 0.4;\\n}\\n\\n.hovered_btns:active,\\n.edit_me_:active,\\n.create_btn:active,\\n.delete_elems:active {\\n  background-color: #0E1FC0;\\n  color: #fff;\\n  transition: 0.2s ease all;\\n}\\n\\n.delete_elems {\\n  font-size: 20px;\\n}\\n\\n.edit_me_,\\n.create_btn {\\n  flex: auto;\\n  padding: 3px;\\n  border-radius: 5px;\\n  border: 1px solid #D1D1D3;\\n}\\n\\n.edit_me_ {\\n  margin-top: 5px;\\n}\\n\\n.by-user {\\n  background-color: #EBEBF5;\\n}\\n\\n.rf_program {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.rf_program img {\\n  display: flex !important;\\n  height: 16px;\\n  width: 16px;\\n  margin-left: 10px;\\n  padding: 0;\\n}\\n\\n.player-container {\\n  height: 72%;\\n}\\n\\n.player-container .category_player {\\n  height: 100%;\\n}\\n\\n.top-list {\\n  overflow: hidden;\\n  overflow-y: scroll;\\n}\\n\\n.timer {\\n  font-family: Roboto;\\n}\\n\\n.checkbox-wrapper {\\n  background: transparent;\\n  width: 50px;\\n  height: 30px;\\n  position: absolute;\\n  z-index: 10;\\n}\\n\\n.elem_of_cont_edit.course {\\n  margin-bottom: 10px;\\n}\\n\\n.dragged-element {\\n  margin-bottom: 10px;\\n}\\n\\n.dragged-element .moved-img {\\n  display: none;\\n}\\n\\n.dragged-element.moved .moved-img {\\n  display: block;\\n}\\n\\n.dragged-element:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.generation_elem {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.programm-row {\\n  white-space: nowrap;\\n}\\n\\n.sound-label {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.cont_of_edit_ {\\n  margin-top: 0;\\n}\\n\\n.categories,\\n.user-categories,\\n.courses {\\n  overflow: visible;\\n}\\n\\n.user-categories {\\n  margin-top: 10px;\\n}\\n\\n.btn-player {\\n  background: none;\\n}\\n\\n.btn-player:focus {\\n  outline: none;\\n}\\n\\n.btn-player:disabled {\\n  opacity: 0.4;\\n}\\n\\n.btn-player img {\\n  width: 18px;\\n}\\n\\n.selected-sounds {\\n  font-size: 20px;\\n  padding-left: 60px;\\n  height: 50px;\\n  width: 100%;\\n  color: #0B0B20;\\n  font-weight: 600;\\n  background-size: 15px;\\n  background: url('soundicon.png') no-repeat 20px center;\\n  padding-right: 20px;\\n  border: 1px solid #A0A0A9;\\n  border-radius: 10px;\\n  white-space: nowrap;\\n}\\n\\n.selected-sounds__label {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.custom-duration {\\n  background: url('timeic.png');\\n  background-repeat: no-repeat;\\n  background-size: 18px;\\n  background-position: 20px center;\\n  width: 150px;\\n  height: 90px;\\n  border-top-left-radius: 10px;\\n  border-bottom-left-radius: 10px;\\n  border: 1px solid #A0A0A9;\\n  font-size: 30px;\\n  font-weight: 600;\\n  outline: none;\\n  color: #0B0B20;\\n  padding-left: 70px;\\n  padding-right: 10px;\\n}\\n\\n.custom-duration.invalid {\\n  border: 2px solid #ff0000;\\n  color: #ff0000;\\n}\\n\\n.custom-duration:disabled {\\n  opacity: 0.4;\\n}\\n\\n.playlist {\\n  width: 75%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { CdkDragDrop, CdkDropList, copyArrayItem, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, LoadingController, MenuController, ModalController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, of, Subject, throwError, timer } from 'rxjs';\nimport { catchError, finalize, map, takeUntil, takeWhile, tap } from 'rxjs/operators';\nimport * as uuid from 'uuid';\n\nimport { LanguageModalComponent } from '../shared/components/language-modal/language-modal.component';\nimport { COUPON_STATUSES } from '../shared/constants/coupons.constant';\nimport { APP_ROUTE_URLS } from '../shared/constants/routes.constant';\nimport { ITranslations } from '../shared/interfaces/translations.interface';\nimport { UserModel } from '../shared/models/user.model';\nimport { DbService } from '../shared/services/db.service';\n\nimport { IPlaylistEvent, PlaylistComponent } from './components/playlist/playlist.component';\nimport { MixModel } from './model/playlist.model';\nimport { SoundModel } from './model/sound.model';\nimport { PlayerSoundService } from './services/play-sound.service';\nimport { PlayerApiService } from './services/player.api.service';\n\nenum CONTROLS_NAME {\n  CATEGORY    = 'category',\n  COURSE      = 'course',\n  CUSTOM_TIME = 'custom_time',\n  RANGE       = 'range',\n}\n\nconst DURATION_TICK = 1000;\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.page.html',\n  styleUrls: ['./player.page.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlayerPage implements OnInit, OnDestroy {\n  get currentSound (): string {\n    if (!this.selectedSounds.length) {\n      this.playerFormGroup.get(CONTROLS_NAME.RANGE).disable({ emitEvent: false });\n\n      return '';\n    }\n\n    this.playerFormGroup.get(CONTROLS_NAME.RANGE).enable({ emitEvent: false });\n\n    return this.selectedSounds.map(sound => sound.name).join(', ');\n  }\n\n  get isSwitchButtonsDisabled (): boolean {\n    return !this.selectedSounds.length ||\n      this.selectedSounds.length > 1 ||\n      (this.soundList && this.soundList.length <= 1) ||\n      !this.playerSoundService.isSomePlaying;\n  }\n\n  get isDisableCourseCreate (): boolean {\n    return this.isOfficialCategorySelected ||\n      this.isOfficialCourseSelected ||\n      !this.selectedCategoryId ||\n      !this.playerFormGroup.get(CONTROLS_NAME.COURSE).value ||\n      !this.playerFormGroup.get(CONTROLS_NAME.COURSE).value.trim();\n  }\n\n  get selectedSoundsMaxDuration (): number {\n    return Math.max(...this.selectedSounds.map(it => it.duration), 0);\n  }\n\n  get customDuration (): number {\n    return this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).valid\n      ? this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).value\n      : 0;\n  }\n\n  @ViewChild(PlaylistComponent, { static: false })\n  set playlistContentChild (playlistComponent: PlaylistComponent) {\n    if (this.draggedFilteredSounds) {\n      this.draggedFilteredSounds.connectedTo = playlistComponent\n        ? playlistComponent.playlistDraggedSoundList\n        : this.draggedFilteredSounds.connectedTo = this.draggedSoundList;\n    }\n  }\n\n  @ViewChild('draggedSoundListElm', { static: false }) draggedSoundList: CdkDropList;\n  @ViewChild('draggedFilteredSoundsElm', { static: false }) draggedFilteredSounds: CdkDropList;\n\n  selectedCategoryId: any;\n  categories: any[];\n  countDown: Observable<number>;\n  color: string;\n  soundList: SoundModel[];\n  filteredSounds: SoundModel[];\n  selectedSounds: SoundModel[]        = [];\n  copiedSounds: SoundModel[]          = [];\n  copiedMixes: MixModel[]             = [];\n  officialCategoriesId: string[]      = [];\n  userOwnCategoryCourses: any[]       = [];\n  officialCategoryCourses: any[]      = [];\n  selectedCourse: string              = '';\n  isOfficialCourseSelected: boolean   = false;\n  isOfficialCategorySelected: boolean = false;\n  userOwnCategoriesId: string[]       = [];\n  isPlaylistOpened: boolean           = false;\n  totalDuration: number               = 0;\n  isRangeChange: boolean              = false;\n\n  playerFormGroup: FormGroup = new FormGroup({\n    [CONTROLS_NAME.CATEGORY]: new FormControl(),\n    [CONTROLS_NAME.COURSE]: new FormControl(),\n    [CONTROLS_NAME.CUSTOM_TIME]: new FormControl(null, Validators.pattern('^[0-9]*$')),\n    [CONTROLS_NAME.RANGE]: new FormControl(0),\n  });\n\n  APP_ROUTE_URLS: typeof APP_ROUTE_URLS = APP_ROUTE_URLS;\n  CONTROLS_NAME: typeof CONTROLS_NAME   = CONTROLS_NAME;\n\n  private courses: any[];\n  private upack: string;\n  private user: UserModel;\n  private sounds: SoundModel[];\n  private settings: any[];\n  private availableSoundsArray: string[] = [];\n  private translations: ITranslations    = {};\n  private counter: number                = 0;\n\n  private readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor (\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _dbService: DbService,\n    private _modalController: ModalController,\n    private alertController: AlertController,\n    private menu: MenuController,\n    private translateService: TranslateService,\n    public loadingController: LoadingController,\n    public storage: Storage,\n    private _playerApiService: PlayerApiService,\n    public playerSoundService: PlayerSoundService,\n    private _playerSoundService: PlayerSoundService,\n  ) {\n    this.translateService.get(['error', 'noCourse', 'max5', 'notMoveToOfficial'])\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(values => {\n        this.translations = values;\n      });\n\n    this.load('Загрузка');\n  }\n\n  dropCategory (event: CdkDragDrop<any[]>): void {\n    moveItemInArray(this.userOwnCategoriesId, event.previousIndex, event.currentIndex);\n  }\n\n  dropCourse (event: CdkDragDrop<any[]>): void {\n    moveItemInArray(this.userOwnCategoryCourses, event.previousIndex, event.currentIndex);\n  }\n\n  dropSound (event: CdkDragDrop<any[]>): void {\n    if (!this.selectedCategoryId && !this.isOfficialCourseSelected) {\n      return;\n    }\n\n    this.resetSounds();\n\n    if (this.isOfficialCourseSelected) {\n      if (event.container !== event.previousContainer) {\n        this.alert(this.translations.error, this.translations.notMoveToOfficial);\n      }\n\n      moveItemInArray(this.soundList, event.previousIndex, event.currentIndex);\n\n      return;\n    }\n\n    if (event.container !== event.previousContainer) {\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n\n      this.soundList = this.playerSoundService.updateSelectedSoundsUuid(this.soundList, this.selectedSounds);\n\n      const selectedCourse = this.getCourseById(this.selectedCourse);\n\n      this.updateSounds();\n\n      return;\n    }\n\n    moveItemInArray(this.soundList, event.previousIndex, event.currentIndex);\n\n    this.updateSounds();\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit (): void {\n    this.playerFormGroup.get(CONTROLS_NAME.COURSE).disable({ emitEvent: false });\n\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).setValue(null, { emitEvent: false });\n\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME)\n      .valueChanges\n      .pipe(takeUntil(this._destroy$))\n      .subscribe((duration: number) => {\n        if (!this.selectedSounds.length ||\n          duration <= 0 ||\n          this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).invalid) {\n          return;\n        }\n\n        this.selectedSounds.forEach(sound => {\n          sound.duration = duration;\n        });\n\n        this.counter = 0;\n      });\n\n    this.getColor();\n  }\n\n  ngOnDestroy (): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  ionViewDidEnter (): void {\n    this.loadData();\n  }\n\n  async changeLanguage (): Promise<void> {\n    const modal = await this._modalController.create({\n      component: LanguageModalComponent,\n      cssClass: 'change-language',\n    });\n\n    return modal.present();\n  }\n\n  onEditCategory (): void {\n    this.load('Загрузка');\n\n    const selectedCategory = this.getCategoryById(this.selectedCategoryId);\n    selectedCategory.name  = this.playerFormGroup.get(CONTROLS_NAME.CATEGORY).value;\n\n    this._playerApiService.renameCategory({\n      id: selectedCategory.id,\n      name: selectedCategory.name,\n    })\n      .subscribe(() => {\n        this.loadingController.dismiss();\n      });\n  }\n\n  onAddCategory (): void {\n    this.load('Загрузка');\n\n    this._playerApiService.addCategory({\n      name: this.playerFormGroup.get(CONTROLS_NAME.CATEGORY).value,\n      status: COUPON_STATUSES.ACTIVE,\n      created_user_id: this.user.id,\n      user_id: this.user.uid,\n      official: 0,\n    })\n      .subscribe(async () => {\n        await this.getCategories();\n        await this.reload();\n\n        this.playerFormGroup.get(CONTROLS_NAME.CATEGORY).setValue(null, { emitEvent: false });\n\n        this.loadingController.dismiss();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  onDeleteCategory (): void {\n    this.load('Загрузка');\n\n    this._playerApiService.deleteCategory({\n      id: this.selectedCategoryId,\n    })\n      .subscribe(async () => {\n        this.userOwnCategoryCourses  = [];\n        this.officialCategoryCourses = [];\n        this.soundList               = [];\n\n        await this.getCategories();\n        await this.reload();\n\n        this.loadingController.dismiss();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  onEditCourse (): void {\n    this.load('Загрузка');\n\n    const selectedCourse = this.getCourseById(this.selectedCourse);\n    selectedCourse.name  = this.playerFormGroup.get(CONTROLS_NAME.COURSE).value;\n\n    this._playerApiService.renameCourse({\n      id: selectedCourse.id,\n      name: selectedCourse.name,\n    })\n      .subscribe(() => {\n        this.loadingController.dismiss();\n      });\n  }\n\n  onAddCourse (): void {\n    this.load('Загрузка');\n\n    this._playerApiService.addCourse({\n      name: this.playerFormGroup.get(CONTROLS_NAME.COURSE).value,\n      status: COUPON_STATUSES.ACTIVE,\n      official: 0,\n      user_id: this.user.uid,\n      created_user_id: this.user.uid,\n      cat_id: this.selectedCategoryId,\n    })\n      .subscribe(async () => {\n        await this.getCategories();\n        await this.getCourses();\n        await this.reload();\n        this.filterCourses(this.selectedCategoryId, false);\n\n        this.playerFormGroup.get(CONTROLS_NAME.COURSE).setValue(null, { emitEvent: false });\n\n        this.loadingController.dismiss();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  onDeleteCourse (): void {\n    this.load('Загрузка');\n\n    this._playerApiService.deleteCourse({\n      id: this.selectedCourse,\n    })\n      .subscribe(async () => {\n        this.soundList = [];\n\n        await this.getCategories();\n        await this.getCourses();\n        await this.reload();\n        this.filterCourses(this.selectedCategoryId, false);\n\n        this.loadingController.dismiss();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  switchPlaylist (): void {\n    this.resetSounds();\n\n    this.isPlaylistOpened = !this.isPlaylistOpened;\n    this.selectedSounds   = [];\n    this.soundList        = [];\n  }\n\n  copySounds (): void {\n    this.copiedSounds = this.selectedSounds.length\n      ? [...this.selectedSounds]\n      : [...this.soundList];\n  }\n\n  onCopyPlaylistSound ({ copiedSounds, copiedMixes }: { copiedSounds: SoundModel[], copiedMixes: MixModel[] }): void {\n    // if (copiedSounds && copiedMixes) {\n    //   this.copiedSounds = [\n    //     ...copiedSounds,\n    //     ...this._playerSoundService.getSoundsFromSelectedMixes(copiedMixes),\n    //   ];\n    //\n    //   return;\n    // }\n    //\n    // if (copiedSounds) {\n    //   this.copiedSounds = [...copiedSounds];\n    // }\n    //\n    // if (copiedMixes) {\n    //   this.copiedSounds = [...this._playerSoundService.getSoundsFromSelectedMixes(copiedMixes)];\n    // }\n\n    this.copiedSounds = [...copiedSounds];\n    this.copiedMixes  = [...copiedMixes];\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  pasteSounds (): void {\n    this.soundList = [...this.soundList, ...this.copiedSounds];\n\n    if (this.copiedMixes) {\n      this.soundList = [...this.soundList, ...this._playerSoundService.getSoundsFromSelectedMixes(this.copiedMixes)];\n    }\n\n    this.soundList = this.soundList.map(it => ({ ...it, uuid: uuid.v4() }));\n\n    this.copiedSounds   = [];\n    this.selectedSounds = [];\n    this.copiedMixes    = [];\n\n    this.updateSounds();\n  }\n\n  pauseSelectedSounds (): void {\n    this.selectedSounds.forEach(sound => {\n      this.playerSoundService.stopSound(sound);\n    });\n\n    this.countDown = of(this.counter);\n\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).enable({ emitEvent: false });\n  }\n\n  playSelectedSounds (): void {\n    if (this.selectedSounds.length >= 5) {\n      this.alert('', this.translations.max5);\n\n      return;\n    }\n\n    this.setSoundDuration(this.selectedSounds[0]);\n    this.startCountDown();\n\n    this.selectedSounds.forEach(sound => {\n      this.playerSoundService.playSound(sound);\n    });\n\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).disable({ emitEvent: false });\n  }\n\n  changeSelectedSounds (sound: SoundModel, event: MouseEvent): void {\n    event.stopPropagation();\n\n    const foundSound = this.selectedSounds.find(it => it.uuid === sound.uuid);\n\n    if (!foundSound) {\n      this.selectedSounds.push(sound);\n\n      if (this.playerSoundService.isSomePlaying) {\n        this.playerSoundService.playSound(sound);\n      } else {\n        this.setCustomTime(this.selectedSoundsMaxDuration);\n        this.setSoundDuration(this.selectedSounds[0]);\n      }\n\n      return;\n    }\n\n    this.selectedSounds = this.selectedSounds.filter(it => it.uuid !== sound.uuid);\n\n    if (this.playerSoundService.isSoundPlaying(sound.uuid)) {\n      this.playerSoundService.stopSound(sound);\n\n      this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).enable({ emitEvent: false });\n    } else {\n      this.setCustomTime(this.selectedSoundsMaxDuration);\n      this.setSoundDuration(this.selectedSounds[0]);\n    }\n\n    if (!this.selectedSounds.length) {\n      this.resetSounds();\n    }\n  }\n\n  removeSound (sound: SoundModel): void {\n    this.soundList = this.soundList.filter(it => it.uuid !== sound.uuid);\n\n    this.updateSounds();\n  }\n\n  setCourse (course: any): void {\n    const id = course.id;\n\n    this.resetSounds();\n\n    if (this.selectedCourse === id) {\n      this.selectedCourse           = undefined;\n      this.soundList                = undefined;\n      this.isOfficialCourseSelected = false;\n\n      return;\n    }\n\n    this.isOfficialCourseSelected = course.official === 'on';\n\n    if (!this.isOfficialCourseSelected) {\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).setValue(course.name, { emitEvent: false });\n    } else {\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).setValue(null, { emitEvent: false });\n    }\n\n    if (!this.isOfficialCourseSelected) {\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).enable({ emitEvent: false });\n    } else {\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).disable({ emitEvent: false });\n    }\n\n    this.selectedCourse = id;\n\n    for (const course of this.courses) {\n      if (course.id === id) {\n        this.soundList = course.sounds.map(it => {\n          return new SoundModel({ ...it, uuid: uuid.v4() });\n        });\n      }\n    }\n  }\n\n  filterCourses (id: string, isReset: boolean = true): void {\n    this.resetSounds();\n\n    if (isReset && Number(id) === Number(this.selectedCategoryId)) {\n      this.selectedCategoryId      = undefined;\n      this.selectedCourse          = undefined;\n      this.soundList               = undefined;\n      this.userOwnCategoryCourses  = [];\n      this.officialCategoryCourses = [];\n\n      return;\n    }\n\n    const selectedCategory = this.getCategoryById(id);\n\n    this.isOfficialCategorySelected = selectedCategory.official === 'on';\n\n    if (!this.isOfficialCategorySelected) {\n      this.playerFormGroup.get(CONTROLS_NAME.CATEGORY).setValue(selectedCategory.name, { emitEvent: false });\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).enable({ emitEvent: false });\n    } else {\n      this.playerFormGroup.get(CONTROLS_NAME.CATEGORY).setValue(null, { emitEvent: false });\n      this.playerFormGroup.get(CONTROLS_NAME.COURSE).disable({ emitEvent: false });\n    }\n\n    this.selectedCategoryId = Number(id);\n    this.soundList          = null;\n    this.selectedCourse     = null;\n\n    this.userOwnCategoryCourses = this.courses.filter(course => {\n      return course.categories\n        && course.official !== 'on'\n        && course.categories.length\n        && (course.categories[0].id === this.selectedCategoryId\n          || (course.categories[1] && course.categories[1].id === this.selectedCategoryId));\n    });\n\n    this.officialCategoryCourses = this.courses.filter(course => {\n      return course.categories\n        && course.official === 'on'\n        && course.categories.length\n        && (course.categories[0].id === this.selectedCategoryId\n          || (course.categories[1] && course.categories[1].id === this.selectedCategoryId));\n    });\n  }\n\n  openMenu (): void {\n    this.menu.open('first');\n  }\n\n  // direction:\n  //    0 - previous\n  //    1 - next\n  autoPlay (direction: number): void {\n    const playingSoundIndex = this.soundList.findIndex(\n      sound => this.playerSoundService.playingSounds.indexOf(sound.uuid) !== -1,\n    );\n\n    const currentPlayingSound = this.soundList[playingSoundIndex];\n\n    if (this.playerSoundService.isSoundPlaying(currentPlayingSound.uuid)) {\n      this.playerSoundService.stopSound(currentPlayingSound);\n    }\n\n    if (direction === 0) {\n      this.selectedSounds = playingSoundIndex === 0\n        ? [this.soundList[this.soundList.length - 1]]\n        : [this.soundList[playingSoundIndex - 1]];\n    }\n\n    if (direction === 1) {\n      this.selectedSounds = playingSoundIndex === this.soundList.length - 1\n        ? [this.soundList[0]]\n        : [this.soundList[playingSoundIndex + 1]];\n    }\n\n    this.counter = 0;\n    this.setSoundDuration(this.selectedSounds[0]);\n\n    this.playerSoundService.playSound(this.selectedSounds[0]);\n\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).disable({ emitEvent: false });\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  async reload (): Promise<void> {\n    if (!this.settings) {\n      await this.getSettings();\n\n      return;\n    }\n\n    const ownCategoriesId     = this.getOwnCategoriesId();\n    const availableCats       = this.settings[`${this.upack}_cats`].value;\n    this.userOwnCategoriesId  = [...ownCategoriesId];\n    this.officialCategoriesId = this.getOfficialCategoriesId();\n\n    if (this.sounds) {\n      const availableSounds = this.settings[`${this.upack}_sounds`].value.split(',');\n\n      this.availableSoundsArray = availableSounds\n        .map(id => this.sounds.find(it => it.id === Number(id)))\n        .map(it => it.uuid);\n    }\n  }\n\n  getItems (event: any): void {\n    const val = event.target.value;\n\n    if (val && val.trim() !== '') {\n      this.filteredSounds = this.sounds.filter((item) => {\n        return (item.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      });\n\n      return;\n    }\n\n    this.getSounds();\n  }\n\n  onPlaylistSoundChange ({ selectedSounds, soundList }: IPlaylistEvent): void {\n    let isSomePlaying = false;\n\n    if (this.playerSoundService.isSomePlaying) {\n      this.selectedSounds.forEach(sound => {\n        this.playerSoundService.stopSound(sound);\n      });\n\n      isSomePlaying = true;\n    }\n\n    this.selectedSounds = selectedSounds;\n    this.soundList      = soundList;\n\n    if (isSomePlaying) {\n      selectedSounds.forEach(sound => {\n        this.playerSoundService.playSound(sound);\n      });\n    }\n  }\n\n  onTouchStartRange (): void {\n    this.isRangeChange = true;\n  }\n\n  onTouchEndRange (): void {\n    this.isRangeChange = false;\n  }\n\n  onChangeRange ({ detail }: CustomEvent): void {\n    if (this.isRangeChange) {\n      const duration = this.totalDuration - Math.round((detail.value / 100) * this.totalDuration);\n      this.countDown = of(duration);\n      this.counter   = duration;\n      // this.isRangeChange = false;\n\n      // if (this._playerSoundService.isSomePlaying) {\n      //   this.startCountDown();\n      // }\n    }\n  }\n\n  private updateSounds (): void {\n    this._playerApiService.addSounds({\n      id: this.selectedCourse,\n      sounds_id: this.soundList.map(sound => sound.id).join(','),\n    })\n      .pipe(\n        catchError(({ error }) => {\n          console.error('error', error);\n\n          return throwError(error);\n        }),\n      )\n      .subscribe(async () => {\n        await this.getCourses();\n        await this.getSounds();\n\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  private setCustomTime (time: number): void {\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).setValue(time, { emitEvent: false });\n  }\n\n  private getColor (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this.storage.get('color')\n        .then(val => {\n          this.color = val;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private async getUser (): Promise<void> {\n    const userData = await this._dbService.executeSql('SELECT * FROM user', []);\n\n    if (!userData) {\n      console.error('ERROR: no user in table');\n\n      return;\n    }\n\n    if (userData.rows.length > 0) {\n      this.user = new UserModel(userData.rows.item(0));\n    }\n\n    this._changeDetectorRef.detectChanges();\n  }\n\n  private getPack (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this.storage.get('upack')\n        .then(val => {\n          this.upack = val;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private async alert (header: string, message: string): Promise<void> {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private async load (message: string): Promise<void> {\n    const loading = await this.loadingController.create({\n      message,\n      duration: 0,\n    });\n\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  private getSounds (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._playerApiService.getSounds()\n        .subscribe(sounds => {\n          this.sounds = sounds;\n\n          this.reload();\n\n          if (this.availableSoundsArray.length !== 0) {\n            this.filteredSounds = this.sounds.filter(sound => this.availableSoundsArray.indexOf(sound.uuid) !== -1);\n          }\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private getSettings (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._playerApiService.getSettings()\n        .subscribe(data => {\n          this.settings = data;\n\n          this.reload();\n          this.getSounds();\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private getCourses (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._playerApiService.getCourses()\n        .subscribe(data => {\n          this.courses = data.list;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private getCategories (): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._playerApiService.getCategories()\n        .subscribe(data => {\n          this.categories = data.list;\n\n          resolve();\n\n          this._changeDetectorRef.detectChanges();\n        });\n    });\n  }\n\n  private resetSounds (): void {\n    this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME).enable({ emitEvent: false });\n\n    if (this.playerSoundService.isSomePlaying) {\n      this.selectedSounds.forEach(sound => {\n        this.playerSoundService.stopSound(sound);\n      });\n    }\n\n    this.counter        = 0;\n    this.selectedSounds = [];\n    this.countDown      = of(0);\n\n    this.playerFormGroup.get(CONTROLS_NAME.RANGE).setValue(0, { emitEvent: false });\n  }\n\n  private setSoundDuration ({ duration }: any): void {\n    const customDurationControl = this.playerFormGroup.get(CONTROLS_NAME.CUSTOM_TIME);\n\n    const soundDuration = customDurationControl.valid && customDurationControl.value\n      ? customDurationControl.value * 60\n      : duration * 60;\n\n    this.counter = this.counter ? this.counter : soundDuration;\n\n    this.totalDuration = Number(soundDuration);\n    this.countDown     = of(this.totalDuration);\n\n    this.playerFormGroup.get(CONTROLS_NAME.RANGE).setValue(0, { emitEvent: false });\n  }\n\n  private startCountDown (): void {\n    this.countDown = timer(0, DURATION_TICK)\n      .pipe(\n        takeWhile(t => this.counter > 0),\n        map(() => --this.counter),\n        tap(count => {\n          const rangeValue = Math.round((1 - count / this.totalDuration) * 100);\n\n          this.playerFormGroup.get(CONTROLS_NAME.RANGE).setValue(rangeValue, { emitEvent: false });\n        }),\n        finalize(() => {\n          if (this.playerSoundService.isSomePlaying && this.counter === 0) {\n            if (this.soundList.length > 1) {\n              this.autoPlay(1);\n            } else {\n              this.pauseSelectedSounds();\n\n              this.counter       = 0;\n              this.countDown     = of(0);\n              this.totalDuration = 0;\n\n              this.playerFormGroup.get(CONTROLS_NAME.RANGE).setValue(0, { emitEvent: false });\n\n              this._changeDetectorRef.detectChanges();\n            }\n          }\n        }),\n      );\n  }\n\n  private getCategoryById (id: any): any {\n    return this.categories.find(category => category.id === Number(id));\n  }\n\n  private getCourseById (id: any): any {\n    return this.courses.find(course => course.id === Number(id));\n  }\n\n  private findSoundById (id: number): SoundModel {\n    return this.sounds.find(sound => sound.id === id);\n  }\n\n  private findSoundByUuid (uuid: string): any {\n    return this.soundList.find(sound => sound.uuid === uuid);\n  }\n\n  private getOfficialCategoriesId (): string[] {\n    return this.categories\n      .filter(category => category.user_id === 0 && category.official === 'on')\n      .map(category => String(category.id));\n  }\n\n  private getOwnCategoriesId (): string[] {\n    return this.categories\n      .filter(category => category.user_id === this.user.uid && category.official !== 'on')\n      .map(category => String(category.id));\n  }\n\n  private async loadData (): Promise<void> {\n    await this.getPack();\n    await this.getUser();\n\n    if (!this.user) {\n      return;\n    }\n\n    await this.getCategories();\n    await this.getSettings();\n    await this.getCourses();\n    await this.getSounds();\n\n    if (this.loadingController) {\n      this.loadingController.dismiss();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport * as uuid from 'uuid';\r\n\r\nimport { MixModel } from '../model/playlist.model';\r\nimport { SoundModel } from '../model/sound.model';\r\n\r\nconst TOTAL_HZS = 5;\r\nconst DECIBEL_LEVEL = -20;\r\n\r\n@Injectable()\r\nexport class PlayerSoundService {\r\n  get isSomePlaying (): boolean {\r\n    return Object.values(this._playing).some(it => it);\r\n  }\r\n\r\n  get playingSounds (): string[] {\r\n    return Object.keys(this._playing).filter(key => this._playing[key]);\r\n  }\r\n\r\n  // fixed Decibel value\r\n  \r\n  private _osc: { [key: string]: OscillatorNode[] } = {};\r\n  private _playing: { [key: string]: boolean }      = {};\r\n  private _freq: { [key: string]: number[] }        = {};\r\n  private _audioContext: AudioContext               = new AudioContext();\r\n\r\n  isSoundPlaying (uuid: string): boolean {\r\n    return this._playing[uuid];\r\n  }\r\n\r\n  playSound (sound: SoundModel): void {\r\n    this.updateFreq(sound);\r\n    this.toggle(sound);\r\n  }\r\n\r\n  stopSound (sound: SoundModel): void {\r\n    this.toggle(sound);\r\n  }\r\n\r\n  updateSelectedSoundsUuid (soundList: SoundModel[], selectedSoundList: SoundModel[]): SoundModel[] {\r\n    return soundList.map(it => {\r\n      const soundUuid = it.uuid;\r\n\r\n      const newSoundInstance = {\r\n        ...it,\r\n        uuid: uuid.v4(),\r\n      };\r\n\r\n      const foundIndex = selectedSoundList.findIndex(it => it.uuid === soundUuid);\r\n\r\n      if (foundIndex >= 0) {\r\n        selectedSoundList[foundIndex] = newSoundInstance;\r\n      }\r\n\r\n      return newSoundInstance;\r\n    });\r\n  }\r\n\r\n  getSoundsFromSelectedMixes (mixes: MixModel[]): SoundModel[] {\r\n    const mixesSounds = mixes.map(mix => mix.sounds);\r\n\r\n    return [].concat(...mixesSounds);\r\n  }\r\n\r\n  private updateFreq (sound: SoundModel): void {\r\n    for (let i = 1; i <= TOTAL_HZS; i++) {\r\n      const hz = sound[`hz${i}`];\r\n\r\n      if (!this._freq[sound.uuid]) {\r\n        this._freq[sound.uuid] = [];\r\n      }\r\n\r\n      this._freq[sound.uuid][i] = hz;\r\n\r\n      if (this._osc[sound.uuid] && this._osc[sound.uuid][i]) {\r\n        this._osc[sound.uuid][i].frequency.value = hz;\r\n      }\r\n    }\r\n  }\r\n\r\n  convertDBToGain(Db) {\r\n    return Math.pow(10, Db);\r\n  }\r\n\r\n  private toggle (sound: SoundModel): void {\r\n    if (this._playing[sound.uuid]) {\r\n      for (let i = 1; i <= TOTAL_HZS; i++) {\r\n        this._osc[sound.uuid][i].stop(0);\r\n      }\r\n\r\n      this._playing[sound.uuid] = false;\r\n\r\n      return;\r\n    }\r\n\r\n    if (!this._osc[sound.uuid]) {\r\n      this._osc[sound.uuid] = [];\r\n    }\r\n\r\n    for (let i = 1; i <= TOTAL_HZS; i++) {\r\n      this._osc[sound.uuid][i] = this._audioContext.createOscillator();\r\n\r\n      var gainNode = this._audioContext.createGain();\r\n      this._osc[sound.uuid][i].connect(gainNode);\r\n\r\n      gainNode.gain.value = this.convertDBToGain(DECIBEL_LEVEL);\r\n      this._osc[sound.uuid][i].frequency.value = this._freq[sound.uuid][i];\r\n\r\n      gainNode.connect(this._audioContext.destination);\r\n      this._osc[sound.uuid][i].start(0);\r\n    }\r\n\r\n    this._playing[sound.uuid] = true;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport * as uuid from 'uuid';\r\n\r\nimport { API_CATEGORY, API_COURSE, API_ENDPOINT, API_SOUND, API_USER } from '../../shared/constants/api.constant';\r\nimport { PlaylistDataModel } from '../model/playlist.model';\r\nimport { SoundModel } from '../model/sound.model';\r\n\r\n@Injectable()\r\nexport class PlayerApiService {\r\n  constructor (private _http: HttpClient) {\r\n  }\r\n\r\n  getPlayLists (): Observable<PlaylistDataModel> {\r\n    return this._http.get<PlaylistDataModel>(`${API_ENDPOINT}/${API_USER}/getPlayList`)\r\n      .pipe(\r\n        map((data: any) => new PlaylistDataModel(data)),\r\n      );\r\n  }\r\n\r\n  getUserPlayList (userId: number): Observable<PlaylistDataModel> {\r\n    return this._http.get<PlaylistDataModel>(`${API_ENDPOINT}/${API_USER}/getUserPlayList?id=${userId}`)\r\n      .pipe(\r\n        map((data: any) => new PlaylistDataModel(data)),\r\n      );\r\n  }\r\n\r\n  getSounds (): Observable<SoundModel[]> {\r\n    return this._http.get(`${API_ENDPOINT}/${API_SOUND}/getSoundList`)\r\n      .pipe(\r\n        map((data: any) => {\r\n          return data.list.map((it) => {\r\n            return new SoundModel({ ...it, uuid: uuid.v4() });\r\n          });\r\n        }),\r\n      );\r\n  }\r\n\r\n  getSettings (): Observable<any> {\r\n    return this._http.get(`${API_ENDPOINT}/${API_USER}/getSettings`);\r\n  }\r\n\r\n  getCourses (): Observable<any> {\r\n    return this._http.get(`${API_ENDPOINT}/${API_COURSE}/getCourseList`);\r\n  }\r\n\r\n  getCategories (): Observable<any> {\r\n    return this._http.get(`${API_ENDPOINT}/${API_CATEGORY}/getCateoryList`);\r\n  }\r\n\r\n  addSounds (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_COURSE}/addSounds`, data);\r\n  }\r\n\r\n  renameCategory (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_CATEGORY}/renameCategory`, data);\r\n  }\r\n\r\n  renameCourse (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_COURSE}/renameCourse`, data);\r\n  }\r\n\r\n  addCourse (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_COURSE}/addCourse`, data);\r\n  }\r\n\r\n  addCategory (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_CATEGORY}/addCategory`, data);\r\n  }\r\n\r\n  deleteCategory (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_CATEGORY}/deleteCategory`, data);\r\n  }\r\n\r\n  deleteCourse (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_COURSE}/deleteCourse`, data);\r\n  }\r\n\r\n  addPlaylist (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/addPlayList`, data);\r\n  }\r\n\r\n  renamePlaylist (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/renamePlaylist`, data);\r\n  }\r\n\r\n  addPlayListSound (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/addPlayListSound`, data);\r\n  }\r\n\r\n  deletePlaylist (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/deletePlaylist`, data);\r\n  }\r\n\r\n  addMix (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/addMix`, data);\r\n  }\r\n\r\n  resetMix (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/resetMix`, data);\r\n  }\r\n\r\n  addMixSounds (data: any): Observable<any> {\r\n    return this._http.post(`${API_ENDPOINT}/${API_USER}/addMixSounds`, data);\r\n  }\r\n}\r\n","export default \".change-lang {\\n  display: block;\\n  font-weight: 600;\\n  font-size: 24px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbGFuZ3VhZ2UtbW9kYWwvRDpcXEJhY2t1cFxcRGV2ZWxvcG1lbnRcXFdvcmtfSm9ic1xcRnJlZWxhbmNpbmdcXE91dFxcQW5ndWxhcl9zb3VuZFxcQXJjaGl2ZS9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxsYW5ndWFnZS1tb2RhbFxcbGFuZ3VhZ2UtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2xhbmd1YWdlLW1vZGFsL2xhbmd1YWdlLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9sYW5ndWFnZS1tb2RhbC9sYW5ndWFnZS1tb2RhbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFuZ2UtbGFuZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiIsIi5jaGFuZ2UtbGFuZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { APP_LANGUAGES, ILanguage } from '../../constants/languages.constant';\n\n@Component({\n  selector: 'language-modal.component',\n  templateUrl: './language-modal.component.html',\n  styleUrls: ['./language-modal.component.scss'],\n})\nexport class LanguageModalComponent implements OnInit {\n  selectedLang: string       = APP_LANGUAGES[0].code;\n  APP_LANGUAGES: ILanguage[] = APP_LANGUAGES;\n\n  constructor (\n    private _modalController: ModalController,\n    private _translateService: TranslateService,\n    private _storage: Storage,\n  ) {\n  }\n\n  async ngOnInit (): Promise<void> {\n    this.selectedLang = await this._storage.get('lang');\n  }\n\n  changeLang (lang: string): void {\n    this._translateService.use(lang);\n    this._storage.set('lang', lang);\n\n    this._modalController.dismiss();\n  }\n}\n"],"sourceRoot":"webpack:///"}